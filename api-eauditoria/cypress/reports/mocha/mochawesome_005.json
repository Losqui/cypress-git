{
  "stats": {
    "suites": 6,
    "tests": 52,
    "passes": 51,
    "pending": 1,
    "failures": 0,
    "start": "2021-04-12T15:01:01.997Z",
    "end": "2021-04-12T15:01:33.451Z",
    "duration": 31454,
    "testsRegistered": 52,
    "passPercent": 100,
    "pendingPercent": 1.9230769230769231,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9d802856-044f-4f47-874f-39637b39930f",
      "title": "",
      "fullFile": "cypress\\integration\\versaoapi.spec.js",
      "file": "cypress\\integration\\versaoapi.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c107a85-ed43-4004-91e8-fd25022af2ed",
          "title": "Testes API - Cadastro de Versão",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A - POST - Cadastrando uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão A - POST - Cadastrando uma Versão",
              "timedOut": null,
              "duration": 852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Teste para versão',\n    descricao: 'Escrituração Contábil Digital alterado cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste para versão') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99999',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-02-03T02:00:00',\n        fim: '2025-04-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '99999') codigoLeiaute = c.codigo;\n    });\n    expect(codigoLeiaute).to.be.equal('99999');\n  });\n});\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '99999') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '1741',\n      descricao: 'Versão 10.99',\n      publicacao: '2025-01-01T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n});",
              "err": {},
              "uuid": "118ba5ad-c09d-4fc0-ace8-742a1d7321b3",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "B - POST - Cadastrando uma Versão com um idLeiaute que não existe (Não foi possível encontrar o Leiaute especificado)",
              "fullTitle": "Testes API - Cadastro de Versão B - POST - Cadastrando uma Versão com um idLeiaute que não existe (Não foi possível encontrar o Leiaute especificado)",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: '/Versao',\n  body: {\n    idLeiaute: 'c5050740-2871-423b-9354-24b413a8fdd5',\n    codigo: '10.98',\n    descricao: 'Versão 10.99',\n    publicacao: '2025-02-01T02:00:00',\n    status: 'Ativo'\n  },\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('Não foi possível encontrar o Leiaute especificado');\n});",
              "err": {},
              "uuid": "702fcbdb-3b21-4bbb-b09c-15f11071fbf0",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "C - POST - Campo Codigo duplicado (Já existe um Versão com este código)",
              "fullTitle": "Testes API - Cadastro de Versão C - POST - Campo Codigo duplicado (Já existe um Versão com este código)",
              "timedOut": null,
              "duration": 914,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Modelo versão ducplicado',\n    descricao: 'Teste dup cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Modelo versão ducplicado') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '7182',\n      descricao: 'Leiaute 7182 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2024-12-01T02:00:00',\n        fim: '2024-12-31T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '7182') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '1099',\n      descricao: 'Duplicidade código 10.99',\n      publicacao: '2025-02-01T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n});\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '7182') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '1099',\n      descricao: 'Duplicidade código 210.99',\n      publicacao: '2025-02-02T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('Já existe uma Versão com este código');\n  });\n});",
              "err": {},
              "uuid": "f3c43005-5c77-414c-9432-6795640fa23b",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "D - POST - Campo Publicação duplicado (Já existe um Versão com este código)",
              "fullTitle": "Testes API - Cadastro de Versão D - POST - Campo Publicação duplicado (Já existe um Versão com este código)",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "7d879ccb-65f1-452d-8578-e43456313d6e",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "E - POST - Campo idLeiaute vazio (Não foi possível encontrar o Leiaute especificado)",
              "fullTitle": "Testes API - Cadastro de Versão E - POST - Campo idLeiaute vazio (Não foi possível encontrar o Leiaute especificado)",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: '/Versao',\n  body: {\n    codigo: '11.99',\n    descricao: 'Versão 11.99',\n    publicacao: '2025-03-01T02:00:00',\n    status: 'Inativo'\n  },\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('Não foi possível encontrar o Leiaute especificado');\n});",
              "err": {},
              "uuid": "aad49085-3e3d-4f2e-93bc-1186c314aee0",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "F - POST - Todos os campos obrigatórios vazios",
              "fullTitle": "Testes API - Cadastro de Versão F - POST - Todos os campos obrigatórios vazios",
              "timedOut": null,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta.body.errors);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Código é obrigatório');\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n    expect(resposta.body.errors.Publicacao[0]).to.be.equal('O campo de Publicacao é obrigatório');\n  });\n});",
              "err": {},
              "uuid": "b3ed1e10-645c-4498-bd26-7020846efeae",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "G - POST - Campo Codigo vazio (O campo de Codigo é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão G - POST - Campo Codigo vazio (O campo de Codigo é obrigatório)",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      descricao: 'Versão 12.99',\n      publicacao: '2025-01-01T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Código é obrigatório');\n  });\n});",
              "err": {},
              "uuid": "1658b82b-bccd-4668-8933-e77ae5e5aa1d",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "H - POST - Campo Descrição vazio (O campo de Descrição é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão H - POST - Campo Descrição vazio (O campo de Descrição é obrigatório)",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '13.99',\n      publicacao: '2025-04-01T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n  });\n});",
              "err": {},
              "uuid": "d75085f1-9e45-4cb1-b4fe-72cfe8c0e195",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I - POST - Campo Publicacao vazio (O campo de Publicacao é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão I - POST - Campo Publicacao vazio (O campo de Publicacao é obrigatório)",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '14.99',\n      descricao: 'Versão 14.99',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Publicacao[0]).to.be.equal('O campo de Publicacao é obrigatório');\n  });\n});",
              "err": {},
              "uuid": "e340c52d-7868-49a2-a4d5-960a15c0ba58",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "J - POST - Cadastrar Versão sem informar o Campo Status (Por padrão deve vir preenchida com Inativo)",
              "fullTitle": "Testes API - Cadastro de Versão J - POST - Cadastrar Versão sem informar o Campo Status (Por padrão deve vir preenchida com Inativo)",
              "timedOut": null,
              "duration": 688,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Testando Status',\n    descricao: 'Teste de status não preenchido cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Testando Status') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '4859',\n      descricao: 'Leiaute 4859 do status cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-05-03T02:00:00',\n        fim: '2025-06-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '4859') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '15.99',\n      descricao: 'Versão 15.99',\n      publicacao: '2025-05-01T02:00:00' //status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200); //Verificando se o cenário de teste foi executado corretamente.\n  cy.request({\n    method: 'GET',\n    url: '/Versao'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    var statusLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '15.99') codigoLeiaute = c.codigo;\n      if (c.status === 'Inativo') statusLeiaute = c.status;\n    });\n    expect(codigoLeiaute).to.be.equal('15.99');\n    expect(statusLeiaute).to.be.equal('Inativo');\n  });\n});",
              "err": {},
              "uuid": "8529be3b-9c27-47e1-bd34-54f4fa404116",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "K - PUT - Alterar (Descrição) de uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão K - PUT - Alterar (Descrição) de uma Versão",
              "timedOut": null,
              "duration": 906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Alterando descr',\n    descricao: 'Teste descr cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Alterando descr') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '5926',\n      descricao: 'Leiaute 5926 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-06-04T02:00:00',\n        fim: '2025-07-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '5926') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '16.99',\n      descricao: 'Versão 16.99',\n      publicacao: '2025-06-01T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '16.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '16.99',\n      descricao: 'Versão 16.99 Alterado cy',\n      publicacao: '2025-06-01T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Versao'\n}).then(function (resposta) {\n  var descricaoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.descricao === 'Versão 16.99 Alterado cy') descricaoLeiaute = c.descricao;\n  });\n  expect(descricaoLeiaute).to.be.equal('Versão 16.99 Alterado cy');\n});",
              "err": {},
              "uuid": "24204a16-8b81-49f8-9ce3-5a043dbc2aa8",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "L - PUT - Alterar (Código) de uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão L - PUT - Alterar (Código) de uma Versão",
              "timedOut": null,
              "duration": 894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Cod Alterar',\n    descricao: 'Teste cod cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Cod Alterar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '2603',\n      descricao: 'Leiaute 2603 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-07-04T02:00:00',\n        fim: '2025-08-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '2603') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '17.99',\n      descricao: 'Versão 17.99',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '17.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '177.99',\n      descricao: 'Versão 17.99',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    }\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Versao'\n}).then(function (resposta) {\n  var coLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '177.99') coLeiaute = c.codigo;\n  });\n  expect(coLeiaute).to.be.equal('177.99');\n});",
              "err": {},
              "uuid": "2fe8fd1f-4dfd-4910-92b6-2ce89ef6f656",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "M - PUT - Alterar (publicacao) de uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão M - PUT - Alterar (publicacao) de uma Versão",
              "timedOut": null,
              "duration": 880,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Public Alterar',\n    descricao: 'Teste publicacao cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Public Alterar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '6857',\n      descricao: 'Leiaute 6857 do public cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-08-05T02:00:00',\n        fim: '2025-09-04T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '6857') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '18.99',\n      descricao: 'Versão 18.99',\n      publicacao: '2025-06-21T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '18.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '18.99',\n      descricao: 'Versão 18.99',\n      publicacao: '2025-07-11T02:00:00',\n      status: 'Inativo'\n    }\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Versao'\n}).then(function (resposta) {\n  var pubLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.publicacao === '2025-07-11T02:00:00') pubLeiaute = c.publicacao;\n  });\n  expect(pubLeiaute).to.be.equal('2025-07-11T02:00:00');\n});",
              "err": {},
              "uuid": "630e5e53-de19-45af-9f04-913d78ac4e5b",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "N - PUT - Alterar (Status) de uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão N - PUT - Alterar (Status) de uma Versão",
              "timedOut": null,
              "duration": 933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Status Alterar',\n    descricao: 'Teste Status cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Status Alterar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '256314',\n      descricao: 'Leiaute 256314 do public cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-06T02:00:00',\n        fim: '2025-10-04T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '256314') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '335566',\n      descricao: 'Versão 335566',\n      publicacao: '2025-06-21T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '335566'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '335566',\n      descricao: 'Versão 18.99',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Versao'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  var statusLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '335566') codigoLeiaute = c.codigo;\n    if (c.status === 'Inativo') statusLeiaute = c.status;\n  });\n  expect(codigoLeiaute).to.be.equal('335566');\n  expect(statusLeiaute).to.be.equal('Inativo');\n});",
              "err": {},
              "uuid": "52046411-ae22-4f99-874a-6de47bc35d05",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O - PUT - Alterar campo Codigo para vazio (O campo de Codigo é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão O - PUT - Alterar campo Codigo para vazio (O campo de Codigo é obrigatório)",
              "timedOut": null,
              "duration": 759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Cod vazio',\n    descricao: 'Teste cod vazio cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Cod vazio') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '3302',\n      descricao: 'Leiaute 3302 Cod vazio cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-08-05T02:00:00',\n        fim: '2025-09-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '3302') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '109.99',\n      descricao: 'Versão 109.99',\n      publicacao: '2025-07-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '109.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      //codigo: '177.99',\n      descricao: 'Versão 109.99',\n      publicacao: '2025-07-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Codigo é obrigatório');\n});",
              "err": {},
              "uuid": "1bab209b-22bb-4791-b63a-4996be53c479",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "P - PUT - Alterar campo Descrição para vazio (O campo de Descrição é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão P - PUT - Alterar campo Descrição para vazio (O campo de Descrição é obrigatório)",
              "timedOut": null,
              "duration": 750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Descri vazio',\n    descricao: 'Teste Descri vazio cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Descri vazio') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '1526',\n      descricao: 'Leiaute 1526 Cod vazio cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-08-06T02:00:00',\n        fim: '2025-10-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '1526') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '88.98',\n      descricao: 'Versão 88.98',\n      publicacao: '2025-08-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '88.98'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '88.98',\n      //descricao: 'Versão 119.99',\n      publicacao: '2025-08-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n});",
              "err": {},
              "uuid": "6ef7bab1-84c9-4d95-8a45-6207bdd19948",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Q - PUT - Alterar campo Publicacao vazio (O campo de Publicacao é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão Q - PUT - Alterar campo Publicacao vazio (O campo de Publicacao é obrigatório)",
              "timedOut": null,
              "duration": 893,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Publicacao vazio',\n    descricao: 'Teste Publicacao vazio cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Publicacao vazio') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '4815',\n      descricao: 'Leiaute 4815 publicacao vazio cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-07T02:00:00',\n        fim: '2025-10-23T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '4815') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '129.99',\n      descricao: 'Versão 129.99',\n      publicacao: '2025-08-21T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '129.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '129.99',\n      descricao: 'Versão 129.99',\n      //publicacao: '2025-08-21T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Publicacao[0]).to.be.equal('O campo de Publicacao é obrigatório');\n});",
              "err": {},
              "uuid": "fc7d7968-2b3d-4006-b39f-3d545bd2759d",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "R - PUT - Alterar campo Status vazio (Por padrão deve vir preenchida com Inativo)",
              "fullTitle": "Testes API - Cadastro de Versão R - PUT - Alterar campo Status vazio (Por padrão deve vir preenchida com Inativo)",
              "timedOut": null,
              "duration": 816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Status vazio',\n    descricao: 'Teste status vazio cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Status vazio') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '4301',\n      descricao: 'Leiaute 4301 status vazio cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-10-08T02:00:00',\n        fim: '2025-11-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '4301') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '139.99',\n      descricao: 'Versão 139.99',\n      publicacao: '2025-09-21T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '139.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '139.99',\n      descricao: 'Versão 139.99',\n      publicacao: '2025-09-21T02:00:00'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200); //Verificando se o cenário de teste foi executado corretamente.\n  cy.request({\n    method: 'GET',\n    url: '/Versao'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    var statusLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '139.99') codigoLeiaute = c.codigo;\n      if (c.status === 'Inativo') statusLeiaute = c.status;\n    });\n    expect(codigoLeiaute).to.be.equal('139.99');\n    expect(statusLeiaute).to.be.equal('Inativo');\n  });\n});",
              "err": {},
              "uuid": "1f9d4b50-2a3c-4f99-8664-ece428451332",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "S - PUT - Alterar campo Codigo duplicado (Já existe um Versão com este código)",
              "fullTitle": "Testes API - Cadastro de Versão S - PUT - Alterar campo Codigo duplicado (Já existe um Versão com este código)",
              "timedOut": null,
              "duration": 1025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Código duplicado Alterar',\n    descricao: 'Teste duplicação de cod cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Código duplicado Alterar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '741856',\n      descricao: 'Leiaute 741856 do public cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-06T02:00:00',\n        fim: '2025-10-04T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '741856') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '859674',\n      descricao: 'Versão 859674',\n      publicacao: '2025-06-21T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '741856') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '556644',\n      descricao: 'Versão 658147',\n      publicacao: '2025-07-21T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '556644'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '859674',\n      descricao: 'Versão codi',\n      publicacao: '2025-06-13T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Codigo[0]).to.be.equal('Já existe uma Versão com este código');\n});",
              "err": {},
              "uuid": "bca5320e-d4f4-4529-bd6c-7b35faba621e",
              "parentUUID": "3c107a85-ed43-4004-91e8-fd25022af2ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a49247e4-6c62-4d75-8c43-2a7103de6412",
              "title": "2 - Teste API Leiaute (Filtros)",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Populando base com Versão",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) A - POST - Populando base com Versão",
                  "timedOut": null,
                  "duration": 649,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Teste filtro',\n    descricao: 'Escrituração Contábil Digital cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste filtro') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '12345',\n      descricao: 'Leiaute 12345 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-02-03T02:00:00',\n        fim: '2025-04-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '12345') codigoLeiaute = c.codigo;\n    });\n    expect(codigoLeiaute).to.be.equal('12345');\n  });\n});\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '12345') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '12345.99',\n      descricao: 'Versão 10.99',\n      publicacao: '2025-01-01T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "c087781b-b6c5-4dcb-b351-5a86a7b2cea8",
                  "parentUUID": "a49247e4-6c62-4d75-8c43-2a7103de6412",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - GET - (Listar todos) Filtrar Versão pelo Codigo",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) B - GET - (Listar todos) Filtrar Versão pelo Codigo",
                  "timedOut": null,
                  "duration": 282,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    Codigo: '12345.99'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === '12345.99') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].codigo).to.contain('12345.99');\n});",
                  "err": {},
                  "uuid": "459dbeb3-e679-403b-94a5-b2de7ea31d94",
                  "parentUUID": "a49247e4-6c62-4d75-8c43-2a7103de6412",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - GET - (Listar todos) Filtrar Versão pela Descrição",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) C - GET - (Listar todos) Filtrar Versão pela Descrição",
                  "timedOut": null,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    descricao: 'Versão 10.99'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === 'Versão 10.99') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].descricao).to.contain('Versão 10.99');\n});",
                  "err": {},
                  "uuid": "11c83f5e-e5e0-43d3-9205-0b1e6f4fdc50",
                  "parentUUID": "a49247e4-6c62-4d75-8c43-2a7103de6412",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - GET - (Listar todos) Filtrar Versão pela Publicação",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) D - GET - (Listar todos) Filtrar Versão pela Publicação",
                  "timedOut": null,
                  "duration": 145,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    publicacao: '2025-01-01T02:00:00'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === '2025-01-01T02:00:00') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].publicacao).to.contain('2025-01-01T02:00:00');\n});",
                  "err": {},
                  "uuid": "fbec0e05-ac66-46ab-8c49-a0b19c89375f",
                  "parentUUID": "a49247e4-6c62-4d75-8c43-2a7103de6412",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "E - GET - (Listar todos) Filtrar Versão pelo Status",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) E - GET - (Listar todos) Filtrar Versão pelo Status",
                  "timedOut": null,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    status: 'Ativo'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === 'Ativo') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].status).to.contain('Ativo');\n  expect(resposta.body.retorno.length).to.be.above(1); //Validando se existema mais de 1 registro nessa página \n});",
                  "err": {},
                  "uuid": "60d00155-43b2-4f27-bfbc-8653d2083f49",
                  "parentUUID": "a49247e4-6c62-4d75-8c43-2a7103de6412",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F - GET - (Listar todos) Filtrar Versão por uma página especifica e que exista registros",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) F - GET - (Listar todos) Filtrar Versão por uma página especifica e que exista registros",
                  "timedOut": null,
                  "duration": 179,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    'Paginacao.Pagina': '1'\n  }\n}).then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.above(1); //Validando se existema mais de 1 registro nessa página \n});",
                  "err": {},
                  "uuid": "b15cec48-fc59-451b-8ae1-616104db1abc",
                  "parentUUID": "a49247e4-6c62-4d75-8c43-2a7103de6412",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G - GET - (Listar todos) Filtrar Versão por uma página que NÃO exista registros",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) G - GET - (Listar todos) Filtrar Versão por uma página que NÃO exista registros",
                  "timedOut": null,
                  "duration": 170,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    'Paginacao.Pagina': '1000'\n  }\n}).then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.equal(0); //Validando se na página 1000 o número de registros seja = 0\n});",
                  "err": {},
                  "uuid": "3ac6ca88-ddee-4f95-90e6-14f16abe0565",
                  "parentUUID": "a49247e4-6c62-4d75-8c43-2a7103de6412",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "H - GET - (Listar todos) Filtrar Versão pelo total de páginas",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) H - GET - (Listar todos) Filtrar Versão pelo total de páginas",
                  "timedOut": null,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    'Paginacao.TotalPorPagina': '2'\n  }\n}).then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.equal(2); //Validando o total de registros disponíveis por página. Nesse teste são 2 por página\n});",
                  "err": {},
                  "uuid": "0e15bc99-0b6e-4ad3-b13d-53947868d4c0",
                  "parentUUID": "a49247e4-6c62-4d75-8c43-2a7103de6412",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c087781b-b6c5-4dcb-b351-5a86a7b2cea8",
                "459dbeb3-e679-403b-94a5-b2de7ea31d94",
                "11c83f5e-e5e0-43d3-9205-0b1e6f4fdc50",
                "fbec0e05-ac66-46ab-8c49-a0b19c89375f",
                "60d00155-43b2-4f27-bfbc-8653d2083f49",
                "b15cec48-fc59-451b-8ae1-616104db1abc",
                "3ac6ca88-ddee-4f95-90e6-14f16abe0565",
                "0e15bc99-0b6e-4ad3-b13d-53947868d4c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1912,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2195430d-4eec-41ca-a60b-8de6dcacc6b4",
              "title": "3 - Teste API Versão (Validando: Limite de caracteres)",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Limite de caracteres - codigo [50]",
                  "fullTitle": "Testes API - Cadastro de Versão 3 - Teste API Versão (Validando: Limite de caracteres) A - POST - Limite de caracteres - codigo [50]",
                  "timedOut": null,
                  "duration": 589,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Teste limite',\n    descricao: 'Escrituração Contábil limite cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste limite') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '6789',\n      descricao: 'Leiaute 6789 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-02-03T02:00:00',\n        fim: '2025-04-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '6789') codigoLeiaute = c.id;\n    }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n    cy.request({\n      method: 'POST',\n      url: '/Versao',\n      body: {\n        idLeiaute: codigoLeiaute,\n        codigo: '11987452445214587459632514785496325174789658214578965214785',\n        descricao: 'Versão 10.99',\n        publicacao: '2025-01-01T02:00:00',\n        status: 'Ativo'\n      },\n      failOnStatusCode: false\n    }).as('response');\n    cy.get('@response').then(function (resposta) {\n      console.log(resposta);\n      expect(resposta.status).to.be.equal(400);\n      expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo deve ter no máximo 50 caracteres');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "938288ad-02b6-48b3-a18a-91698c0ed7b6",
                  "parentUUID": "2195430d-4eec-41ca-a60b-8de6dcacc6b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - PUT - Limite de caracteres - codigo [50]",
                  "fullTitle": "Testes API - Cadastro de Versão 3 - Teste API Versão (Validando: Limite de caracteres) B - PUT - Limite de caracteres - codigo [50]",
                  "timedOut": null,
                  "duration": 753,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.cadastrarModelo('Nome PUT max'); //Cadastrando um modelo pra utilizar nos testes de Leiaute\n//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Nome PUT max') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '9905',\n      descricao: 'Leiaute 9905 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-07-04T02:00:00',\n        fim: '2025-08-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '9905') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '911',\n      descricao: 'Versão 119',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '911'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '11987452445214587459632514785496325174789658214578965214785',\n      descricao: 'Versão 119',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo deve ter no máximo 50 caracteres');\n  });\n});",
                  "err": {},
                  "uuid": "05fee8a4-0cc5-4879-b4e4-a07644a7218d",
                  "parentUUID": "2195430d-4eec-41ca-a60b-8de6dcacc6b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - POST - Limite de caracteres - Descrição [150]",
                  "fullTitle": "Testes API - Cadastro de Versão 3 - Teste API Versão (Validando: Limite de caracteres) C - POST - Limite de caracteres - Descrição [150]",
                  "timedOut": null,
                  "duration": 237,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o leiaute registrado no teste acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '6789') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '98765',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições alterado pelo cy. Este manual visa a orientar a execução dos serviços destinados à emissão de documentos e escrituração de livros fiscais',\n      publicacao: '2025-01-01T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo deve ter no máximo 150 caracteres');\n  });\n});",
                  "err": {},
                  "uuid": "627ebd15-e312-4ac9-b9fc-f987bcc3a070",
                  "parentUUID": "2195430d-4eec-41ca-a60b-8de6dcacc6b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - PUT - Limite de caracteres - Descrição [150]",
                  "fullTitle": "Testes API - Cadastro de Versão 3 - Teste API Versão (Validando: Limite de caracteres) D - PUT - Limite de caracteres - Descrição [150]",
                  "timedOut": null,
                  "duration": 820,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.cadastrarModelo('Descrição PUT max'); //Cadastrando um modelo pra utilizar nos testes de Leiaute\n//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Descrição PUT max') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '6889',\n      descricao: 'Leiaute 6889 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-07-04T02:00:00',\n        fim: '2025-08-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '6889') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '1999',\n      descricao: 'Versão 1999',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '1999'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '1999',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições alterado pelo cy. Este manual visa a orientar a execução dos serviços destinados à emissão de documentos e escrituração de livros fiscais',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo deve ter no máximo 150 caracteres');\n  });\n});",
                  "err": {},
                  "uuid": "0da2abf4-70cd-4eef-8052-c564dafc6389",
                  "parentUUID": "2195430d-4eec-41ca-a60b-8de6dcacc6b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "938288ad-02b6-48b3-a18a-91698c0ed7b6",
                "05fee8a4-0cc5-4879-b4e4-a07644a7218d",
                "627ebd15-e312-4ac9-b9fc-f987bcc3a070",
                "0da2abf4-70cd-4eef-8052-c564dafc6389"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2399,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e335e83c-fa6b-4a87-b990-5b9d6a2beddd",
              "title": "4 - Testes API Leiaute - Clonar",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Clonar Versão",
                  "fullTitle": "Testes API - Cadastro de Versão 4 - Testes API Leiaute - Clonar A - POST - Clonar Versão",
                  "timedOut": null,
                  "duration": 902,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.cadastrarModelo('Modelo Clonar'); //Cadastrando um modelo pra utilizar nos testes de Leiaute\n//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Modelo Clonar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '48891',\n      descricao: 'Leiaute 48891 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-04T02:00:00',\n        fim: '2025-10-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '48891') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '2356',\n      descricao: 'Versão 2356',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '2356'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'POST',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id, \"/clone\"),\n    // body:\n    // {\n    //     idLeiaute: `${resposta.body.retorno[0].idLeiaute}`,\n    //     codigo: '11987452445214587459632514785496325174789658214578965214785',\n    //     descricao: 'Versão 119',\n    //     publicacao: '2025-06-11T02:00:00',\n    //     status: 'Inativo'\n    // },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(200);\n    cy.request({\n      method: 'GET',\n      url: '/Versao'\n    }).then(function (resposta) {\n      var codigoLeiaute = null;\n      var statusLeiaute = null;\n      var descLeiaute = null;\n      var publicaLeiaute = null;\n      resposta.body.retorno.forEach(function (c) {\n        if (c.codigo === '2357') codigoLeiaute = c.codigo;\n        if (c.status === 'Inativo') statusLeiaute = c.status;\n        if (c.descricao === 'Versão 2356') descLeiaute = c.descricao;\n        if (c.publicacao === '2025-06-11T02:00:00') publicaLeiaute = c.publicacao;\n      });\n      expect(codigoLeiaute).to.be.equal('2357');\n      expect(statusLeiaute).to.be.equal('Inativo');\n      expect(descLeiaute).to.be.equal('Versão 2356');\n      expect(publicaLeiaute).to.be.equal('2025-06-11T02:00:00');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "4514ec4c-6f7a-48c9-92b0-aaacb7143eec",
                  "parentUUID": "e335e83c-fa6b-4a87-b990-5b9d6a2beddd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4514ec4c-6f7a-48c9-92b0-aaacb7143eec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 902,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0773e0c5-3c23-4511-af44-c8ba34615da1",
              "title": "5 - Testes API Leiaute - Modifica Status",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Modifica o status da Versão para Ativo",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - Modifica Status A - POST - Modifica o status da Versão para Ativo",
                  "timedOut": null,
                  "duration": 866,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.cadastrarModelo('Modelo Modifica Status'); //Cadastrando um modelo pra utilizar nos testes de Leiaute\n//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Modelo Modifica Status') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '456525',\n      descricao: 'Leiaute 456525 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-04T02:00:00',\n        fim: '2025-10-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '456525') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '857595',\n      descricao: 'Versão 857595',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '857595'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id, \"/modificaStatus\"),\n    body: {\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Versao'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    var statusLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '857595') codigoLeiaute = c.codigo;\n      if (c.status === 'Ativo') statusLeiaute = c.status;\n    });\n    expect(codigoLeiaute).to.be.equal('857595');\n    expect(statusLeiaute).to.be.equal('Ativo');\n  });\n});",
                  "err": {},
                  "uuid": "627d35d7-5332-4181-b7ed-f677deb7b56e",
                  "parentUUID": "0773e0c5-3c23-4511-af44-c8ba34615da1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "627d35d7-5332-4181-b7ed-f677deb7b56e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 866,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "98775c59-059a-422d-92e4-f16e699710bc",
              "title": "5 - Testes API Leiaute - DELETE",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - DELETE - Cadastro de Versão (1-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE A - DELETE - Cadastro de Versão (1-A)",
                  "timedOut": null,
                  "duration": 707,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(1741);\ncy.excluirLeiaute(99999);\ncy.excluirModelo('Teste para versão');",
                  "err": {},
                  "uuid": "96e04361-97ac-4afa-ad57-c81ba1963793",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - DELETE - Cadastro de Versão (1-C)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE B - DELETE - Cadastro de Versão (1-C)",
                  "timedOut": null,
                  "duration": 781,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(1099);\ncy.excluirLeiaute(7182);\ncy.excluirModelo('Modelo versão ducplicado');",
                  "err": {},
                  "uuid": "619a2f2f-e778-420a-b392-fecff6168511",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - DELETE - Cadastro de Versão (1-J)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE C - DELETE - Cadastro de Versão (1-J)",
                  "timedOut": null,
                  "duration": 606,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(15.99);\ncy.excluirLeiaute(4859);\ncy.excluirModelo('Testando Status');",
                  "err": {},
                  "uuid": "836080d8-7f8d-4dd4-b6ab-36d7b22918b5",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - DELETE - Cadastro de Versão (1-K)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE D - DELETE - Cadastro de Versão (1-K)",
                  "timedOut": null,
                  "duration": 611,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(16.99);\ncy.excluirLeiaute(5926);\ncy.excluirModelo('Alterando descr');",
                  "err": {},
                  "uuid": "59154a4a-9750-48bb-b7e5-731639d55286",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "E - DELETE - Cadastro de Versão (1-L)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE E - DELETE - Cadastro de Versão (1-L)",
                  "timedOut": null,
                  "duration": 654,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(177.99);\ncy.excluirLeiaute(2603);\ncy.excluirModelo('Cod Alterar');",
                  "err": {},
                  "uuid": "165b165d-ddd6-4235-87af-32ec98605798",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F - DELETE - Cadastro de Versão (1-M)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE F - DELETE - Cadastro de Versão (1-M)",
                  "timedOut": null,
                  "duration": 642,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(18.99);\ncy.excluirLeiaute(6857);\ncy.excluirModelo('Public Alterar');",
                  "err": {},
                  "uuid": "ed8bbac1-eee9-4962-a906-06c7f216f829",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G - DELETE - Cadastro de Versão (1-N)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE G - DELETE - Cadastro de Versão (1-N)",
                  "timedOut": null,
                  "duration": 669,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(335566);\ncy.excluirLeiaute(256314);\ncy.excluirModelo('Status Alterar');",
                  "err": {},
                  "uuid": "1b63362e-eb1e-4354-898b-662e3c7ef800",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "H - DELETE - Cadastro de Versão (1-O)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE H - DELETE - Cadastro de Versão (1-O)",
                  "timedOut": null,
                  "duration": 606,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(109.99);\ncy.excluirLeiaute(3302);\ncy.excluirModelo('Cod vazio');",
                  "err": {},
                  "uuid": "170a1404-3ce0-4b27-aa84-4b1b7b755520",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "I - DELETE - Cadastro de Versão (1-P)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE I - DELETE - Cadastro de Versão (1-P)",
                  "timedOut": null,
                  "duration": 621,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(88.98);\ncy.excluirLeiaute(1526);\ncy.excluirModelo('Descri vazio');",
                  "err": {},
                  "uuid": "3b2c7c5b-413e-45cd-a22a-6563a3ff71f0",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "J - DELETE - Cadastro de Versão (1-Q)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE J - DELETE - Cadastro de Versão (1-Q)",
                  "timedOut": null,
                  "duration": 632,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(129.99);\ncy.excluirLeiaute(4815);\ncy.excluirModelo('Publicacao vazio');",
                  "err": {},
                  "uuid": "4ed98ee0-a7a1-4520-8b81-584399c023f0",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "K - DELETE - Cadastro de Versão (1-R)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE K - DELETE - Cadastro de Versão (1-R)",
                  "timedOut": null,
                  "duration": 683,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(139.99);\ncy.excluirLeiaute(4301);\ncy.excluirModelo('Status vazio');",
                  "err": {},
                  "uuid": "a3a1ccb3-61e4-4087-9a5c-d23f6729602a",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "L - DELETE - Cadastro de Versão (2-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE L - DELETE - Cadastro de Versão (2-A)",
                  "timedOut": null,
                  "duration": 546,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(12345.99);\ncy.excluirLeiaute(12345);\ncy.excluirModelo('Teste filtro');",
                  "err": {},
                  "uuid": "ed60dc53-c2ee-47fa-a9c3-63b76aa1db3f",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "M - DELETE - Cadastro de Versão (3-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE M - DELETE - Cadastro de Versão (3-A)",
                  "timedOut": null,
                  "duration": 431,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirLeiaute(6789);\ncy.excluirModelo('Teste limite');",
                  "err": {},
                  "uuid": "321e40a7-093f-4d5f-8571-eacbd3ff0c99",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "N - DELETE - Cadastro de Versão (3-B)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE N - DELETE - Cadastro de Versão (3-B)",
                  "timedOut": null,
                  "duration": 689,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(911);\ncy.excluirLeiaute(9905);\ncy.excluirModelo('Nome PUT max');",
                  "err": {},
                  "uuid": "dda24082-d813-4f46-9a3f-f43eebea7753",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "O - DELETE - Cadastro de Versão (3-D)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE O - DELETE - Cadastro de Versão (3-D)",
                  "timedOut": null,
                  "duration": 591,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(1999);\ncy.excluirLeiaute(6889);\ncy.excluirModelo('Descrição PUT max');",
                  "err": {},
                  "uuid": "b5e8ae78-e773-4b74-bb96-3b61eafe5f8e",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "P - DELETE - Cadastro de Versão (1-S)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE P - DELETE - Cadastro de Versão (1-S)",
                  "timedOut": null,
                  "duration": 794,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(556644);\ncy.excluirVersao(859674);\ncy.excluirLeiaute(741856);\ncy.excluirModelo('Código duplicado Alterar');",
                  "err": {},
                  "uuid": "2f854976-9891-4946-a2ba-50f28c3271b6",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Q - DELETE - Cadastro de Versão (4-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE Q - DELETE - Cadastro de Versão (4-A)",
                  "timedOut": null,
                  "duration": 983,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(2357);\ncy.excluirVersao(2356);\ncy.excluirLeiaute(48891);\ncy.excluirModelo('Modelo Clonar');",
                  "err": {},
                  "uuid": "c3d79a28-79c6-4904-a635-bb69db39dc79",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "R - DELETE - Cadastro de Versão (5-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE R - DELETE - Cadastro de Versão (5-A)",
                  "timedOut": null,
                  "duration": 690,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(857595);\ncy.excluirLeiaute(456525);\ncy.excluirModelo('Modelo Modifica Status');",
                  "err": {},
                  "uuid": "c1285b7f-5b32-4ce8-8c5b-9c07da121eee",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "S - DELETE - Identificação da Versão inválida",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE S - DELETE - Identificação da Versão inválida",
                  "timedOut": null,
                  "duration": 223,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'DELETE',\n  url: \"/Versao/asdsafsf-fdsfsd\",\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(404);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('A identificação do Versão é inválida');\n});",
                  "err": {},
                  "uuid": "7d5a4e76-0b81-4587-b4ef-984c68a729b6",
                  "parentUUID": "98775c59-059a-422d-92e4-f16e699710bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96e04361-97ac-4afa-ad57-c81ba1963793",
                "619a2f2f-e778-420a-b392-fecff6168511",
                "836080d8-7f8d-4dd4-b6ab-36d7b22918b5",
                "59154a4a-9750-48bb-b7e5-731639d55286",
                "165b165d-ddd6-4235-87af-32ec98605798",
                "ed8bbac1-eee9-4962-a906-06c7f216f829",
                "1b63362e-eb1e-4354-898b-662e3c7ef800",
                "170a1404-3ce0-4b27-aa84-4b1b7b755520",
                "3b2c7c5b-413e-45cd-a22a-6563a3ff71f0",
                "4ed98ee0-a7a1-4520-8b81-584399c023f0",
                "a3a1ccb3-61e4-4087-9a5c-d23f6729602a",
                "ed60dc53-c2ee-47fa-a9c3-63b76aa1db3f",
                "321e40a7-093f-4d5f-8571-eacbd3ff0c99",
                "dda24082-d813-4f46-9a3f-f43eebea7753",
                "b5e8ae78-e773-4b74-bb96-3b61eafe5f8e",
                "2f854976-9891-4946-a2ba-50f28c3271b6",
                "c3d79a28-79c6-4904-a635-bb69db39dc79",
                "c1285b7f-5b32-4ce8-8c5b-9c07da121eee",
                "7d5a4e76-0b81-4587-b4ef-984c68a729b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12159,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "118ba5ad-c09d-4fc0-ace8-742a1d7321b3",
            "702fcbdb-3b21-4bbb-b09c-15f11071fbf0",
            "f3c43005-5c77-414c-9432-6795640fa23b",
            "aad49085-3e3d-4f2e-93bc-1186c314aee0",
            "b3ed1e10-645c-4498-bd26-7020846efeae",
            "1658b82b-bccd-4668-8933-e77ae5e5aa1d",
            "d75085f1-9e45-4cb1-b4fe-72cfe8c0e195",
            "e340c52d-7868-49a2-a4d5-960a15c0ba58",
            "8529be3b-9c27-47e1-bd34-54f4fa404116",
            "24204a16-8b81-49f8-9ce3-5a043dbc2aa8",
            "2fe8fd1f-4dfd-4910-92b6-2ce89ef6f656",
            "630e5e53-de19-45af-9f04-913d78ac4e5b",
            "52046411-ae22-4f99-874a-6de47bc35d05",
            "1bab209b-22bb-4791-b63a-4996be53c479",
            "6ef7bab1-84c9-4d95-8a45-6207bdd19948",
            "fc7d7968-2b3d-4006-b39f-3d545bd2759d",
            "1f9d4b50-2a3c-4f99-8664-ece428451332",
            "bca5320e-d4f4-4529-bd6c-7b35faba621e"
          ],
          "failures": [],
          "pending": [
            "7d879ccb-65f1-452d-8578-e43456313d6e"
          ],
          "skipped": [],
          "duration": 11949,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}