{
  "stats": {
    "suites": 6,
    "tests": 67,
    "passes": 57,
    "pending": 6,
    "failures": 4,
    "start": "2021-04-29T19:29:34.614Z",
    "end": "2021-04-29T19:29:59.640Z",
    "duration": 25026,
    "testsRegistered": 67,
    "passPercent": 93.44262295081968,
    "pendingPercent": 8.955223880597014,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "84cf8b48-2dbf-4d5a-8024-854ffe301e52",
      "title": "",
      "fullFile": "cypress\\integration\\leiauteapi.spec.js",
      "file": "cypress\\integration\\leiauteapi.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "be6267fa-5ccd-43da-b9d0-2ee7b5f0776f",
          "title": "Testes API - Cadastro de Leiaute",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "61e13a0e-754d-475d-b548-bb0ce2880539",
              "title": "1 - Testes API Leiaute (POST - PUT)",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Cadastrando um Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) A - POST - Cadastrando um Leiaute",
                  "timedOut": null,
                  "duration": 1001,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Teste para leiaute',\n    descricao: 'Escrituração Contábil Digital alterado cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste para leiaute') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99999',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-03T02:00:00',\n        fim: '2023-12-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '99999') codigoLeiaute = c.codigo;\n    });\n    expect(codigoLeiaute).to.be.equal('99999');\n  });\n});",
                  "err": {},
                  "uuid": "9746ad7f-ec6f-43b7-963e-c1c9b57fdd59",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - POST - Cadastrando um Leiaute com um idModeloLeiaute que não existe (Não foi possível encontrar o ModeloLeiaute especificado)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) B - POST - Cadastrando um Leiaute com um idModeloLeiaute que não existe (Não foi possível encontrar o ModeloLeiaute especificado)",
                  "timedOut": null,
                  "duration": 1854,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: '/Leiaute',\n  body: {\n    idModeloLeiaute: '320fa4f5-3930-413a-bf17-209b1013cdaa',\n    codigo: '99998',\n    descricao: 'Leiaute 99998 duplicado do modelo EFD Contribuições cy',\n    status: 'Ativo',\n    vigencia: {\n      inicio: '2023-02-03T02:00:00',\n      fim: '2023-12-03T02:00:00'\n    }\n  },\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('Não foi possível encontrar o ModeloLeiaute especificado');\n});",
                  "err": {
                    "message": "AssertionError: expected 'Não foi possível encontrar o Modelo especificado' to equal 'Não foi possível encontrar o ModeloLeiaute especificado'",
                    "estack": "AssertionError: expected 'Não foi possível encontrar o Modelo especificado' to equal 'Não foi possível encontrar o ModeloLeiaute especificado'\n    at getRet (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:69279:16)\n    at tryCatcher (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:120203:23)\n    at Function.Promise.attempt.Promise.try (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:117478:29)\n    at Context.thenFn (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:69293:23)\n    at Context.then (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:69660:21)\n    at Context.<anonymous> (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:81414:21)\n    at https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:80892:33\n    at tryCatcher (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:120203:23)\n    at Promise._settlePromiseFromHandler (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:118139:31)\n    at Promise._settlePromise (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:118196:18)\n    at Promise._settlePromiseCtx (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:118233:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:114933:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:114938:10)\n    at Async.drainQueues (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:114812:14)",
                    "diff": "- Não foi possível encontrar o Modelo especificado\n+ Não foi possível encontrar o ModeloLeiaute especificado\n"
                  },
                  "uuid": "ba8f0ebc-4d6c-4d2a-a71d-4cfa3eec39b6",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - POST - Campo Codigo duplicado (Já existe um Leiaute com este código)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) C - POST - Campo Codigo duplicado (Já existe um Leiaute com este código)",
                  "timedOut": null,
                  "duration": 946,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99999',\n      descricao: 'Leiaute 99999 duplicado do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-03T02:00:00',\n        fim: '2023-12-03T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Leiaute[0]).to.be.equal('Já existe um Leiaute com este código');\n  });\n});",
                  "err": {
                    "message": "TypeError: Cannot read property '0' of undefined",
                    "estack": "TypeError: Cannot read property '0' of undefined\n    at Context.<anonymous> (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/tests?p=cypress\\integration\\leiauteapi.spec.js-739:107:46)",
                    "diff": null
                  },
                  "uuid": "b89e360a-f5e4-454b-8ce0-741508c919a0",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - POST - Campo idModeloLeiaute vazio (Não foi possível encontrar o ModeloLeiaute especificado)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) D - POST - Campo idModeloLeiaute vazio (Não foi possível encontrar o ModeloLeiaute especificado)",
                  "timedOut": null,
                  "duration": 670,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: '/Leiaute',\n  body: {\n    codigo: '99997',\n    descricao: 'Leiaute 99997 do modelo EFD Contribuições cy',\n    status: 'Ativo',\n    vigencia: {\n      inicio: '2023-02-03T02:00:00',\n      fim: '2023-12-03T02:00:00'\n    }\n  },\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('Não foi possível encontrar o ModeloLeiaute especificado');\n});",
                  "err": {
                    "message": "AssertionError: expected 'Não foi possível encontrar o Modelo especificado' to equal 'Não foi possível encontrar o ModeloLeiaute especificado'",
                    "estack": "AssertionError: expected 'Não foi possível encontrar o Modelo especificado' to equal 'Não foi possível encontrar o ModeloLeiaute especificado'\n    at getRet (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:69279:16)\n    at tryCatcher (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:120203:23)\n    at Function.Promise.attempt.Promise.try (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:117478:29)\n    at Context.thenFn (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:69293:23)\n    at Context.then (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:69660:21)\n    at Context.<anonymous> (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:81414:21)\n    at https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:80892:33\n    at tryCatcher (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:120203:23)\n    at Promise._settlePromiseFromHandler (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:118139:31)\n    at Promise._settlePromise (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:118196:18)\n    at Promise._settlePromiseCtx (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:118233:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:114933:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:114938:10)\n    at Async.drainQueues (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/runner/cypress_runner.js:114812:14)",
                    "diff": "- Não foi possível encontrar o Modelo especificado\n+ Não foi possível encontrar o ModeloLeiaute especificado\n"
                  },
                  "uuid": "0a996f48-7df4-4068-ba8c-601855727193",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "E - POST - Todos os campos obrigatórios vazios",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) E - POST - Todos os campos obrigatórios vazios",
                  "timedOut": null,
                  "duration": 302,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta.body.errors);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Código é obrigatório');\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo de Vigencia é obrigatório');\n  });\n});",
                  "err": {},
                  "uuid": "0b93fdb9-0d90-4d91-80f3-457453df7899",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F - POST - Campo Codigo vazio (O campo de Codigo é obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) F - POST - Campo Codigo vazio (O campo de Codigo é obrigatório)",
                  "timedOut": null,
                  "duration": 250,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-03T02:00:00',\n        fim: '2023-12-03T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Código é obrigatório');\n  });\n});",
                  "err": {},
                  "uuid": "7915e070-2eee-4a45-8cbf-3679e9b77533",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G - POST - Campo Descrição vazio (O campo de Descrição é obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) G - POST - Campo Descrição vazio (O campo de Descrição é obrigatório)",
                  "timedOut": null,
                  "duration": 261,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99996',\n      descricao: '',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-03T02:00:00',\n        fim: '2023-12-03T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n  });\n});",
                  "err": {},
                  "uuid": "14f4c1d2-f49e-4d00-9c2b-a8cb14d6bac4",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "H - POST - Campo Status vazio (Campo não obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) H - POST - Campo Status vazio (Campo não obrigatório)",
                  "timedOut": null,
                  "duration": 420,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99995',\n      descricao: 'Leiaute 99995 do modelo EFD Contribuições cy',\n      vigencia: {\n        inicio: '2023-12-05T02:00:00',\n        fim: '2024-01-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    var statusLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '99995') codigoLeiaute = c.codigo;\n      if (c.status === 'Inativo') statusLeiaute = c.status;\n    });\n    expect(codigoLeiaute).to.be.equal('99995');\n    expect(statusLeiaute).to.be.equal('Inativo');\n  });\n});",
                  "err": {},
                  "uuid": "0c8c2ab4-0c26-418a-b786-8acd3756d7d1",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "I - POST - Campo Vigencia não informado (O campo de Vigencia é obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) I - POST - Campo Vigencia não informado (O campo de Vigencia é obrigatório)",
                  "timedOut": null,
                  "duration": 352,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99994',\n      descricao: 'Leiaute 99994 do modelo EFD Contribuições cy',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo de Vigencia é obrigatório');\n  });\n});",
                  "err": {},
                  "uuid": "660da036-cd7d-4705-a25c-ab215caccc43",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "J - POST - Campo Início da Vigencia não é informado (O campo de Inicio é obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) J - POST - Campo Início da Vigencia não é informado (O campo de Inicio é obrigatório)",
                  "timedOut": null,
                  "duration": 1523,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99993',\n      descricao: 'Leiaute 99993 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        fim: '1999-02-02T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta.body.errors.Vigencia[0]);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo de Inicio é obrigatório');\n  });\n});",
                  "err": {},
                  "uuid": "919e2ca9-7bf0-4f3c-aa0d-a0203140a5df",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "K - POST - Campo Fim da Vigencia não informado (Campo Vigência fim preenchido com null)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) K - POST - Campo Fim da Vigencia não informado (Campo Vigência fim preenchido com null)",
                  "timedOut": null,
                  "duration": 259,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99992',\n      descricao: 'Leiaute 99992 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2024-02-02T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(200); //expect(resposta.body.vigencia.fim).not.be.exist()\n  });\n});",
                  "err": {},
                  "uuid": "5950d876-41fe-4c02-abd4-9e59f8325b17",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "L - POST - Campo Início da Vigencia maior que Fim (O início do perído deve ser anterior ao fim)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) L - POST - Campo Início da Vigencia maior que Fim (O início do perído deve ser anterior ao fim)",
                  "timedOut": null,
                  "duration": 239,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99991',\n      descricao: 'Leiaute 99991 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '1999-12-04T02:00:00',\n        fim: '1999-02-04T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta.body.errors.Periodo);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O início do perído deve ser anterior ao fim');\n  });\n});",
                  "err": {},
                  "uuid": "d774dfb8-9c18-4e3e-a674-572a96185b64",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "M - POST - Campo Início da Vigencia (mês) - data inválida (O campo inicio está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) M - POST - Campo Início da Vigencia (mês) - data inválida (O campo inicio está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 242,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99990',\n      descricao: 'Leiaute 99990 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-22-03T02:00:00',\n        fim: '2024-01-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo inicio está em um formato inválido!');\n  });\n});",
                  "err": {},
                  "uuid": "a0623850-8bd0-479c-910d-5f7196b1013b",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "N - POST - Campo Início da Vigencia (dia) - data inválida (O campo inicio está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) N - POST - Campo Início da Vigencia (dia) - data inválida (O campo inicio está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 269,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99990',\n      descricao: 'Leiaute 99990 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-30T02:00:00',\n        fim: '2024-01-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo inicio está em um formato inválido!');\n  });\n});",
                  "err": {},
                  "uuid": "58394086-498a-4856-849c-bbfced1faedc",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "O - POST - Campo Início da Vigencia (Hora) - data inválida (O campo inicio está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) O - POST - Campo Início da Vigencia (Hora) - data inválida (O campo inicio está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 470,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99990',\n      descricao: 'Leiaute 99990 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-25T30:00:00',\n        fim: '2024-01-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo inicio está em um formato inválido!');\n  });\n});",
                  "err": {},
                  "uuid": "a271879d-6dfd-44e6-abdb-108acbac11a8",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "P - POST - Campo Fim da Vigencia (mês) - data inválida (O campo fim está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) P - POST - Campo Fim da Vigencia (mês) - data inválida (O campo fim está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 300,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99990',\n      descricao: 'Leiaute 99990 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-25T00:00:00',\n        fim: '2024-15-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo fim está em um formato inválido!');\n  });\n});",
                  "err": {},
                  "uuid": "24669be1-9929-4256-a1a9-132248a74139",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Q - POST - Campo Fim da Vigencia (dia) - data inválida (O campo fim está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) Q - POST - Campo Fim da Vigencia (dia) - data inválida (O campo fim está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 240,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99990',\n      descricao: 'Leiaute 99990 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-25T00:00:00',\n        fim: '2024-01-32T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo fim está em um formato inválido!');\n  });\n});",
                  "err": {},
                  "uuid": "9341ecfa-3c14-4ae8-a5a9-8a343a4f0485",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "R - POST - Campo Fim da Vigencia (hora) - data inválida (O campo fim está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) R - POST - Campo Fim da Vigencia (hora) - data inválida (O campo fim está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 231,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99990',\n      descricao: 'Leiaute 99990 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-25T00:00:00',\n        fim: '2024-01-02T25:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo fim está em um formato inválido!');\n  });\n});",
                  "err": {},
                  "uuid": "809dacf2-4ae6-4ec8-8ffe-dc3984b0040c",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "S - POST - Cadastrar Leiaute sem informar o Campo Status (Por padrão deve vir preenchida com Inativo)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) S - POST - Cadastrar Leiaute sem informar o Campo Status (Por padrão deve vir preenchida com Inativo)",
                  "timedOut": null,
                  "duration": 355,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '111111',\n      descricao: 'Leiaute 111111 do modelo EFD Contribuições cy',\n      vigencia: {\n        inicio: '2005-01-01T02:00:00',\n        fim: '2005-02-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    var statusLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '111111') codigoLeiaute = c.codigo;\n      if (c.status === 'Inativo') statusLeiaute = c.status;\n    });\n    expect(codigoLeiaute).to.be.equal('111111');\n    expect(statusLeiaute).to.be.equal('Inativo');\n  });\n});",
                  "err": {},
                  "uuid": "64238c55-10c1-4bad-b0c4-3d109f73d6d0",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "T - POST - Cadastrar Leiaute Passando um valor Não numerico no campo Código (Campo deve aceitar apenas valores Numéricos)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) T - POST - Cadastrar Leiaute Passando um valor Não numerico no campo Código (Campo deve aceitar apenas valores Numéricos)",
                  "timedOut": null,
                  "duration": 586,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: 'PPPPP',\n      descricao: 'Leiaute BBBBBB do modelo EFD Contribuições cy',\n      status: \"Ativo\",\n      vigencia: {\n        inicio: '2025-02-02T02:00:00',\n        fim: '2025-03-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('Deve ser um inteiro positivo');\n  });\n});",
                  "err": {},
                  "uuid": "ad539755-101b-44c7-8717-6d7aa989dd5c",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "U - POST - Cadastrar um Leiaute onde o período de vigência coincide com outro já cadastrado (Existe um conflito de vigência com outro leiaute cadastrado)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) U - POST - Cadastrar um Leiaute onde o período de vigência coincide com outro já cadastrado (Existe um conflito de vigência com outro leiaute cadastrado)",
                  "timedOut": null,
                  "duration": 860,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado no primeiro cenário\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste para leiaute') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '98765',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-03-03T02:00:00',\n        fim: '2023-10-03T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Leiaute[0]).to.be.equal('Existe um conflito de vigência com outro leiaute cadastrado');\n  });\n});",
                  "err": {
                    "message": "TypeError: Cannot read property '0' of undefined",
                    "estack": "TypeError: Cannot read property '0' of undefined\n    at Context.<anonymous> (https://apigestaoleiauteteste.e-auditoria.com.br/__cypress/tests?p=cypress\\integration\\leiauteapi.spec.js-739:699:46)",
                    "diff": null
                  },
                  "uuid": "5fb8c8f5-370f-4aa2-9ca1-f9d114a29a67",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "V - POST - Cadastrar e validar (se Data fim = null, deve ser substituída pela data início do novo leiaute)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) V - POST - Cadastrar e validar (se Data fim = null, deve ser substituída pela data início do novo leiaute)",
                  "timedOut": null,
                  "duration": 671,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Cadastrar um modelo para ser utilizado nesse cenário\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Testando leiautes',\n    descricao: 'Escrituração Digital cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Testando leiautes') nomeModelo = c.id;\n  }); //Cadastrar um Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '56789',\n      descricao: 'Leiaute 56789 do modelo cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-01-03T00:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200); //Cadasrar um segundo leiaute para o mesmo modelo\n  //de forma que a data fim desse primeiro leiaute seja alterada automaticamente \n  //de null para data vigência início do segundo leiaute cadastrado\n  cy.request({\n    method: 'GET',\n    url: '/ModeloLeiaute'\n  }).then(function (resposta) {\n    var nomeModelo = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.nome === 'Testando leiautes') nomeModelo = c.id;\n    }); //Cadastrando o segundo Leiaute utilizando o ID do modelo cadastrado acima\n    cy.request({\n      method: 'POST',\n      url: '/Leiaute',\n      body: {\n        idModeloLeiaute: nomeModelo,\n        codigo: '4859',\n        descricao: 'Leiaute 005 do modelo EFD Contribuições cy',\n        status: 'Ativo',\n        vigencia: {\n          inicio: '2025-06-03T00:00:00',\n          fim: '2025-10-03T00:00:00'\n        }\n      },\n      failOnStatusCode: false\n    }).as('response'); //Validar se o primeiro leiaute que tinha a data fim = null foi atualizado\n    cy.request({\n      method: 'GET',\n      url: '/Leiaute'\n    }).then(function (resposta) {\n      var codigoLeiaute = null;\n      var statusLeiaute = null;\n      resposta.body.retorno.forEach(function (c) {\n        if (c.codigo === '56789') codigoLeiaute = c.codigo;\n        if (c.vigencia.fim === '2025-06-02T00:00:00') statusLeiaute = c.vigencia.fim;\n      }); //console.log(resposta.body.retorno[4])\n      expect(codigoLeiaute).to.be.equal('56789'), expect(statusLeiaute).to.be.equal('2025-06-02T00:00:00');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "bc983e45-26f0-43e6-af16-e6281b5df8fe",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "X - PUT - Alterar (Descrição) de um Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) X - PUT - Alterar (Descrição) de um Leiaute",
                  "timedOut": null,
                  "duration": 381,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//esse teste quebrou. por que na busca GET ele trouxe dois resultados com 99999\n//assim ele pegou um leiaute que eu não queria.\n//para resolver, preciso apagar esse registro com o codigo = 99999000\n//o problema é que eu apaguei o modelo desse leiaute e por isso não me permite deletar os leiautes iniciando com 99999\ncy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '99999'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '99999',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2023-02-03T02:00:00',\n        fim: '2023-12-03T02:00:00'\n      }\n    }\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var descricaoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.descricao === 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy') descricaoLeiaute = c.descricao;\n  });\n  expect(descricaoLeiaute).to.be.equal('Leiaute 99999 do modelo EFD Contribuições alterado pelo cy');\n});",
                  "err": {},
                  "uuid": "8d3852e0-6c63-4ab3-a81e-f247aac14fbb",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Z - PUT - Alterar (Status) de um Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) Z - PUT - Alterar (Status) de um Leiaute",
                  "timedOut": null,
                  "duration": 418,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '99999'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '99999',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-02-03T02:00:00',\n        fim: '2023-12-03T02:00:00'\n      }\n    }\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var statusLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') statusLeiaute = c.status;\n  });\n  expect(statusLeiaute).to.be.equal('Inativo');\n});",
                  "err": {},
                  "uuid": "de104ded-2f90-4249-9c8e-685d18cc40ca",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "K - PUT - Alterar (vigencia.Início) de um Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) K - PUT - Alterar (vigencia.Início) de um Leiaute",
                  "timedOut": null,
                  "duration": 266,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '99999'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '99999',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-02-01T01:00:00',\n        fim: '2023-12-03T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist'); // cy.request({\n//     method: 'GET',\n//     url: '/Leiaute'\n// }).then (resposta => {\n//     let inicioLeiaute = null\n//     resposta.body.retorno.forEach(c => {\n//         if(c.ini === '2003-01-01T02:00:00') inicioLeiaute = c.ini\n// })\n// console.log(resposta)\n// //expect(resposta.body.retorno[0].vigencia.inicio).to.contain('2004-01-01T02:00:00')\n// expect(resposta.body.retorno[0].vigencia.inicio).to.be.equal('2003-01-01T02:00:00')\n//})",
                  "err": {},
                  "uuid": "fa99b5f6-32e0-48a2-aab5-d227f8efccdc",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "W - PUT - Alterar (vigencia.Fim) de um Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) W - PUT - Alterar (vigencia.Fim) de um Leiaute",
                  "timedOut": null,
                  "duration": 333,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '99999'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '99999',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-02-01T01:00:00',\n        fim: '2023-12-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist'); // cy.request({\n//     method: 'GET',\n//     url: '/Leiaute'\n// }).then (resposta => {\n//     let inicioLeiaute = null\n//     resposta.body.retorno.forEach(c => {\n//         if(c.dtini === '2022-01-02T02:00:00') inicioLeiaute = c.dtini\n//     })\n//     expect(inicioLeiaute).to.be.equal ('2022-01-02T02:00:00')\n// })",
                  "err": {},
                  "uuid": "750825f5-04f2-40f8-b061-8fd51fcb9011",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Y - PUT - Alterar (codigo) de um Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) Y - PUT - Alterar (codigo) de um Leiaute",
                  "timedOut": null,
                  "duration": 436,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '99999'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-02-01T01:00:00',\n        fim: '2023-12-01T02:00:00'\n      }\n    }\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '88888') codLeiaute = c.codigo;\n  });\n  expect(codLeiaute).to.be.equal('88888');\n});",
                  "err": {},
                  "uuid": "c876d46c-828d-4a83-8eb7-59b4bfd38ab1",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AA - PUT - Alterar um Leiaute passando um valor não numérico no campo Código (Campo deve aceitar apenas valores Numéricos)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AA - PUT - Alterar um Leiaute passando um valor não numérico no campo Código (Campo deve aceitar apenas valores Numéricos)",
                  "timedOut": null,
                  "duration": 260,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: 'rrrrr',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-02-01T01:00:00',\n        fim: '2023-12-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Codigo[0]).to.be.equal('Deve ser um inteiro positivo');\n});",
                  "err": {},
                  "uuid": "5c9be8a9-4a97-4cbb-bf4d-57664a6ca8c7",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AB - PUT - Alterar campo Codigo vazio (O campo de Codigo é obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AB - PUT - Alterar campo Codigo vazio (O campo de Codigo é obrigatório)",
                  "timedOut": null,
                  "duration": 275,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-02-01T01:00:00',\n        fim: '2023-12-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Codigo é obrigatório');\n});",
                  "err": {},
                  "uuid": "c849c31f-bf7c-47c8-9a07-3743f3b8eca9",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AC - PUT - Alterar campo Descrição vazio (O campo de Descrição é obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AC - PUT - Alterar campo Descrição vazio (O campo de Descrição é obrigatório)",
                  "timedOut": null,
                  "duration": 328,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: '',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-02-01T01:00:00',\n        fim: '2023-12-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n});",
                  "err": {},
                  "uuid": "bc2055b7-8f73-4492-b2ba-8aa32188da1a",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AD - PUT - Alterar campo Vigencia vazio (O campo de Vigencia é obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AD - PUT - Alterar campo Vigencia vazio (O campo de Vigencia é obrigatório)",
                  "timedOut": null,
                  "duration": 285,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo de Vigencia é obrigatório');\n});",
                  "err": {},
                  "uuid": "0414b7a3-b15e-43a4-bbb0-09fc9074a195",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AE - PUT - Alterar campo Início da Vigencia não informado (O campo de Vigencia é obrigatório)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AE - PUT - Alterar campo Início da Vigencia não informado (O campo de Vigencia é obrigatório)",
                  "timedOut": null,
                  "duration": 281,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Não acho necessário tal verificação. O que vai acontecer é que o campo início não será alterado\ncy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        fim: '2023-12-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400); //expect(resposta.body.errors.Leiaute[0]).to.be.equal('Existe um conflito de vigência com outro leiaute cadastrado')\n  expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo de Inicio é obrigatório');\n});",
                  "err": {},
                  "uuid": "c5b4e09a-755e-4c8a-8a87-2dcdabf8714a",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AF - PUT - Alterar campo Início da Vigencia (mês) - data inválida (O campo inicio está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AF - PUT - Alterar campo Início da Vigencia (mês) - data inválida (O campo inicio está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 383,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Não acho necessário tal verificação. O que vai acontecer é que o campo início não será alterado\ncy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-22-03T02:00:00',\n        fim: '2024-01-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400); //expect(resposta.body.errors.Leiaute[0]).to.be.equal('Existe um conflito de vigência com outro leiaute cadastrado')\n  expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo inicio está em um formato inválido!');\n});",
                  "err": {},
                  "uuid": "fce9c725-1e9c-48a4-a210-485d917af86c",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AG - PUT - Alterar campo Início da Vigencia (dia) - data inválida (O campo inicio está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AG - PUT - Alterar campo Início da Vigencia (dia) - data inválida (O campo inicio está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Não acho necessário tal verificação. O que vai acontecer é que o campo início não será alterado\ncy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-12-33T02:00:00',\n        fim: '2024-01-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400); //expect(resposta.body.errors.Leiaute[0]).to.be.equal('Existe um conflito de vigência com outro leiaute cadastrado')\n  expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo inicio está em um formato inválido!');\n});",
                  "err": {},
                  "uuid": "2dfda64f-41c4-42f9-a28f-a37fb4e8e4f9",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AH - PUT - Alterar campo Início da Vigencia (hora) - data inválida (O campo inicio está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AH - PUT - Alterar campo Início da Vigencia (hora) - data inválida (O campo inicio está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 292,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Não acho necessário tal verificação. O que vai acontecer é que o campo início não será alterado\ncy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-12-03T32:00:00',\n        fim: '2024-01-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400); //expect(resposta.body.errors.Leiaute[0]).to.be.equal('Existe um conflito de vigência com outro leiaute cadastrado')\n  expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo inicio está em um formato inválido!');\n});",
                  "err": {},
                  "uuid": "d6ca336b-2d80-4861-9dec-27a3fd15e289",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AI - PUT - Alterar campo Fim da Vigencia (mês) - data inválida (O campo fim está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AI - PUT - Alterar campo Fim da Vigencia (mês) - data inválida (O campo fim está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 312,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Não acho necessário tal verificação. O que vai acontecer é que o campo início não será alterado\ncy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-10-03T02:00:00',\n        fim: '2024-21-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400); //expect(resposta.body.errors.Leiaute[0]).to.be.equal('Existe um conflito de vigência com outro leiaute cadastrado')\n  expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo fim está em um formato inválido!');\n});",
                  "err": {},
                  "uuid": "79080034-d1a1-4a9d-83f9-0e0abbc2695d",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AJ - PUT - Alterar campo Fim da Vigencia (dia) - data inválida (O campo fim está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AJ - PUT - Alterar campo Fim da Vigencia (dia) - data inválida (O campo fim está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 340,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Não acho necessário tal verificação. O que vai acontecer é que o campo início não será alterado\ncy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-12-03T02:00:00',\n        fim: '2024-01-41T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400); //expect(resposta.body.errors.Leiaute[0]).to.be.equal('Existe um conflito de vigência com outro leiaute cadastrado')\n  expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo fim está em um formato inválido!');\n});",
                  "err": {},
                  "uuid": "0f2c9f61-3ce1-4d22-b153-4b0c2873246d",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AL - PUT - Alterar campo Fim da Vigencia (hora) - data inválida (O campo fim está em um formato inválido!)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 1 - Testes API Leiaute (POST - PUT) AL - PUT - Alterar campo Fim da Vigencia (hora) - data inválida (O campo fim está em um formato inválido!)",
                  "timedOut": null,
                  "duration": 281,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Não acho necessário tal verificação. O que vai acontecer é que o campo início não será alterado\ncy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '88888',\n      descricao: 'Leiaute 99999 do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2023-12-03T02:00:00',\n        fim: '2024-01-01T32:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400); //expect(resposta.body.errors.Leiaute[0]).to.be.equal('Existe um conflito de vigência com outro leiaute cadastrado')\n  expect(resposta.body.errors.Vigencia[0]).to.be.equal('O campo fim está em um formato inválido!');\n});",
                  "err": {},
                  "uuid": "980bc719-2a07-4e5a-9bb1-33eab04baa68",
                  "parentUUID": "61e13a0e-754d-475d-b548-bb0ce2880539",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9746ad7f-ec6f-43b7-963e-c1c9b57fdd59",
                "0b93fdb9-0d90-4d91-80f3-457453df7899",
                "7915e070-2eee-4a45-8cbf-3679e9b77533",
                "14f4c1d2-f49e-4d00-9c2b-a8cb14d6bac4",
                "0c8c2ab4-0c26-418a-b786-8acd3756d7d1",
                "660da036-cd7d-4705-a25c-ab215caccc43",
                "919e2ca9-7bf0-4f3c-aa0d-a0203140a5df",
                "5950d876-41fe-4c02-abd4-9e59f8325b17",
                "d774dfb8-9c18-4e3e-a674-572a96185b64",
                "a0623850-8bd0-479c-910d-5f7196b1013b",
                "58394086-498a-4856-849c-bbfced1faedc",
                "a271879d-6dfd-44e6-abdb-108acbac11a8",
                "24669be1-9929-4256-a1a9-132248a74139",
                "9341ecfa-3c14-4ae8-a5a9-8a343a4f0485",
                "809dacf2-4ae6-4ec8-8ffe-dc3984b0040c",
                "64238c55-10c1-4bad-b0c4-3d109f73d6d0",
                "ad539755-101b-44c7-8717-6d7aa989dd5c",
                "bc983e45-26f0-43e6-af16-e6281b5df8fe",
                "8d3852e0-6c63-4ab3-a81e-f247aac14fbb",
                "de104ded-2f90-4249-9c8e-685d18cc40ca",
                "fa99b5f6-32e0-48a2-aab5-d227f8efccdc",
                "750825f5-04f2-40f8-b061-8fd51fcb9011",
                "c876d46c-828d-4a83-8eb7-59b4bfd38ab1",
                "5c9be8a9-4a97-4cbb-bf4d-57664a6ca8c7",
                "c849c31f-bf7c-47c8-9a07-3743f3b8eca9",
                "bc2055b7-8f73-4492-b2ba-8aa32188da1a",
                "0414b7a3-b15e-43a4-bbb0-09fc9074a195",
                "c5b4e09a-755e-4c8a-8a87-2dcdabf8714a",
                "fce9c725-1e9c-48a4-a210-485d917af86c",
                "2dfda64f-41c4-42f9-a28f-a37fb4e8e4f9",
                "d6ca336b-2d80-4861-9dec-27a3fd15e289",
                "79080034-d1a1-4a9d-83f9-0e0abbc2695d",
                "0f2c9f61-3ce1-4d22-b153-4b0c2873246d",
                "980bc719-2a07-4e5a-9bb1-33eab04baa68"
              ],
              "failures": [
                "ba8f0ebc-4d6c-4d2a-a71d-4cfa3eec39b6",
                "b89e360a-f5e4-454b-8ce0-741508c919a0",
                "0a996f48-7df4-4068-ba8c-601855727193",
                "5fb8c8f5-370f-4aa2-9ca1-f9d114a29a67"
              ],
              "pending": [],
              "skipped": [],
              "duration": 17483,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b22402e1-2e7f-472d-959c-361573b1379d",
              "title": "2 - Teste API Leiaute (Filtros)",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Populando base com Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) A - POST - Populando base com Leiaute",
                  "timedOut": null,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste para leiaute') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '77777',\n      descricao: 'Leiaute 77777 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2024-03-01T02:00:00',\n        fim: '2024-03-30T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "b33a6189-0c45-44fd-b381-5dd5ecdc2747",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - GET - (Listar todos) Filtrar leiaute pelo Codigo",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) B - GET - (Listar todos) Filtrar leiaute pelo Codigo",
                  "timedOut": null,
                  "duration": 142,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    Codigo: '88888'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === '88888') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].codigo).to.contain('88888');\n});",
                  "err": {},
                  "uuid": "7454603e-11c6-4d66-a66e-28ca202e8bbc",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - GET - (Listar todos) Filtrar leiaute pela Descrição",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) C - GET - (Listar todos) Filtrar leiaute pela Descrição",
                  "timedOut": null,
                  "duration": 142,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    Descricao: '77777'\n  }\n}).then(function (resposta) {\n  var descricaoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.desc === '77777') descricaoLeiaute = c.desc;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].descricao).to.contain('77777');\n});",
                  "err": {},
                  "uuid": "4c692c10-3275-4d08-b2f9-eafa1b8423a8",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - GET - (Listar todos) Filtrar leiaute pelo Status",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) D - GET - (Listar todos) Filtrar leiaute pelo Status",
                  "timedOut": null,
                  "duration": 153,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    Status: 'Ativo'\n  }\n}).then(function (resposta) {\n  var statusLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.statu === 'Ativo') statusLeiaute = c.statu;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].status).to.contain('Ativo');\n  expect(resposta.body.retorno.length).to.be.above(1); //Validando se existema mais de 1 registro nessa página \n});",
                  "err": {},
                  "uuid": "f444d5e6-94b6-4f8f-94eb-99b18b5ee731",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "E - GET - (Listar todos) Filtrar leiaute pela Vigência.Início",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) E - GET - (Listar todos) Filtrar leiaute pela Vigência.Início",
                  "timedOut": null,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    'Vigencia.Inicio': '2024-02-01T02:00:00'\n  }\n}).then(function (resposta) {\n  var inicioLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.ini === '2024-02-01T02:00:00') inicioLeiaute = c.ini;\n  });\n  console.log(resposta); //expect(resposta.body.retorno[0].vigencia.inicio).to.be.equal('2004-02-01T02:00:00')\n  // Assertiva acima: como ela ta retornando mais de um registro o teste quebra, mas ele ta certo\n  expect(resposta.body.retorno.length).to.be.above(1); //Validando se existema mais de 1 registro nessa página \n});",
                  "err": {},
                  "uuid": "63f135d2-adcb-48d7-8678-99fae49e9ced",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F - GET - (Listar todos) Filtrar leiaute pela Vigência.Fim",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) F - GET - (Listar todos) Filtrar leiaute pela Vigência.Fim",
                  "timedOut": null,
                  "duration": 176,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    'Vigencia.Fim': '2024-03-01T02:00:00'\n  }\n}).then(function (resposta) {\n  var fimLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.fm === '2024-03-01T02:00:00') fimLeiaute = c.fm;\n  });\n  console.log(resposta); //expect(resposta.body.retorno[0].vigencia.fim).to.be.equal('2004-03-01T02:00:00') \n  // Assertiva acima: como ela ta retornando mais de um registro o teste quebra, mas ele ta certo\n  expect(resposta.body.retorno.length).to.be.above(1); //Validando se existema mais de 1 registro nessa página \n});",
                  "err": {},
                  "uuid": "d9eaa21c-a642-4bf8-8e3f-076ad297dbac",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G - GET - (Listar todos) Filtrar leiaute por uma página especifica e que exista registros",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) G - GET - (Listar todos) Filtrar leiaute por uma página especifica e que exista registros",
                  "timedOut": null,
                  "duration": 158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    'Paginacao.Pagina': '1'\n  }\n}).then(function (resposta) {\n  var fimLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.fm === '2024-03-01T02:00:00') fimLeiaute = c.fm;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.above(1); //Validando se existema mais de 1 registro nessa página \n});",
                  "err": {},
                  "uuid": "54ea7b56-af7e-42c7-8217-71decfc0be19",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "H - GET - (Listar todos) Filtrar leiaute por uma página que NÃO exista registros",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) H - GET - (Listar todos) Filtrar leiaute por uma página que NÃO exista registros",
                  "timedOut": null,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    'Paginacao.Pagina': '1000'\n  }\n}).then(function (resposta) {\n  var fimLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.fm === '2024-03-01T02:00:00') fimLeiaute = c.fm;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.equal(0); //Validando se na página 1000 o número de registros seja = 0\n});",
                  "err": {},
                  "uuid": "a1249316-2554-4055-8f0e-b9ea7750acae",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "I - GET - (Listar todos) Filtrar leiaute pelo total de páginas",
                  "fullTitle": "Testes API - Cadastro de Leiaute 2 - Teste API Leiaute (Filtros) I - GET - (Listar todos) Filtrar leiaute pelo total de páginas",
                  "timedOut": null,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    'Paginacao.TotalPorPagina': '2'\n  }\n}).then(function (resposta) {\n  var fimLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.fm === '2024-03-01T02:00:00') fimLeiaute = c.fm;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.equal(2); //Validando o total de registros disponíveis por página. Nesse teste são 2 por página\n});",
                  "err": {},
                  "uuid": "6f67c154-e3ae-42e7-898f-11652232886e",
                  "parentUUID": "b22402e1-2e7f-472d-959c-361573b1379d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b33a6189-0c45-44fd-b381-5dd5ecdc2747",
                "7454603e-11c6-4d66-a66e-28ca202e8bbc",
                "4c692c10-3275-4d08-b2f9-eafa1b8423a8",
                "f444d5e6-94b6-4f8f-94eb-99b18b5ee731",
                "63f135d2-adcb-48d7-8678-99fae49e9ced",
                "d9eaa21c-a642-4bf8-8e3f-076ad297dbac",
                "54ea7b56-af7e-42c7-8217-71decfc0be19",
                "a1249316-2554-4055-8f0e-b9ea7750acae",
                "6f67c154-e3ae-42e7-898f-11652232886e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1527,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f7f93e44-6acb-4b8f-a1b8-e3b206222d69",
              "title": "3 - Teste API Leiaute (Validando: Limite de caracteres)",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Limite de caracteres - codigo [50]",
                  "fullTitle": "Testes API - Cadastro de Leiaute 3 - Teste API Leiaute (Validando: Limite de caracteres) A - POST - Limite de caracteres - codigo [50]",
                  "timedOut": null,
                  "duration": 271,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '006666666606666666660666666666000666666660666666666066666666600066666666066666666606666666660',\n      descricao: 'Leiaute codigo [50] do modelo EFD Contribuições alterado pelo cy',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2025-03-01T00:00:00',\n        fim: '2025-04-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo deve ter no máximo 50 caracteres');\n  });\n});",
                  "err": {},
                  "uuid": "3cf0cc32-06ff-4111-bcfd-0818a213a0a8",
                  "parentUUID": "f7f93e44-6acb-4b8f-a1b8-e3b206222d69",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - POST - Limite de caracteres - descricao [150]",
                  "fullTitle": "Testes API - Cadastro de Leiaute 3 - Teste API Leiaute (Validando: Limite de caracteres) B - POST - Limite de caracteres - descricao [150]",
                  "timedOut": null,
                  "duration": 529,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.tipo === 'Sistema') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '066',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições alterado pelo cy. Este manual visa a orientar a execução dos serviços destinados à emissão de documentos e escrituração de livros fiscais',\n      status: 'Inativo',\n      vigencia: {\n        inicio: '2025-03-01T00:00:00',\n        fim: '2025-04-01T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo deve ter no máximo 150 caracteres');\n  });\n});",
                  "err": {},
                  "uuid": "276c8701-dd66-4f61-a06f-2bd12141db07",
                  "parentUUID": "f7f93e44-6acb-4b8f-a1b8-e3b206222d69",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - PUT - Limite de caracteres - codigo [50]",
                  "fullTitle": "Testes API - Cadastro de Leiaute 3 - Teste API Leiaute (Validando: Limite de caracteres) C - PUT - Limite de caracteres - codigo [50]",
                  "timedOut": null,
                  "duration": 316,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '77777'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '006666666606666666660666666666000666666660666666666066666666600066666666066666666606666666660',\n      descricao: 'Leiaute 77777 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2024-03-01T02:00:00',\n        fim: '2024-03-30T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo deve ter no máximo 50 caracteres');\n});",
                  "err": {},
                  "uuid": "133533a8-052e-439d-9f61-d82e672bc667",
                  "parentUUID": "f7f93e44-6acb-4b8f-a1b8-e3b206222d69",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - PUT - Limite de caracteres - descricao [150]",
                  "fullTitle": "Testes API - Cadastro de Leiaute 3 - Teste API Leiaute (Validando: Limite de caracteres) D - PUT - Limite de caracteres - descricao [150]",
                  "timedOut": null,
                  "duration": 229,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '77777'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idModeloLeiaute: \"\".concat(resposta.body.retorno[0].idModeloLeiaute),\n      codigo: '77777',\n      descricao: 'Leiaute 77777 do modelo EFD Contribuições cy. Este manual visa a orientar a execução dos serviços destinados à emissão de documentos e escrituração de livros fiscais',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2024-03-01T02:00:00',\n        fim: '2024-03-30T02:00:00'\n      }\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo deve ter no máximo 150 caracteres');\n});",
                  "err": {},
                  "uuid": "ae158b82-40ef-4e70-9ad5-c4c70943ee8b",
                  "parentUUID": "f7f93e44-6acb-4b8f-a1b8-e3b206222d69",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3cf0cc32-06ff-4111-bcfd-0818a213a0a8",
                "276c8701-dd66-4f61-a06f-2bd12141db07",
                "133533a8-052e-439d-9f61-d82e672bc667",
                "ae158b82-40ef-4e70-9ad5-c4c70943ee8b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1345,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "61774c90-6582-47f6-8004-8916576fbb38",
              "title": "4 - Testes API Leiaute - DELETE",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - DELETE - Cadastro de Leiaute (1-A)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE A - DELETE - Cadastro de Leiaute (1-A)",
                  "timedOut": null,
                  "duration": 241,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '88888'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "4c9f3a04-9f36-4fcd-8c20-1f2f806be18f",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - DELETE - Cadastro de Leiaute (1-H)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE B - DELETE - Cadastro de Leiaute (1-H)",
                  "timedOut": null,
                  "duration": 249,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '99995'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "7799bcfd-e83f-4312-be64-ff6780c6bc42",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - DELETE - Removendo leiaute cadastrado para o teste (2-A)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE C - DELETE - Removendo leiaute cadastrado para o teste (2-A)",
                  "timedOut": null,
                  "duration": 279,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '77777'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "412fc850-6ae0-4521-a160-7276af8c71b9",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - DELETE - Removendo leiaute cadastrado para o teste (1-N)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE D - DELETE - Removendo leiaute cadastrado para o teste (1-N)",
                  "timedOut": null,
                  "duration": 262,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '111111'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "d4d200d6-ef82-41c8-9fc9-4649e1fc9ac2",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "E - DELETE - Removendo leiaute cadastrado para o teste (1-K)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE E - DELETE - Removendo leiaute cadastrado para o teste (1-K)",
                  "timedOut": null,
                  "duration": 426,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '99992'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "232b7e0d-d2cd-43c0-bd62-f0c4fed7dd49",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F - DELETE - Identificação do leiaute inválida",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE F - DELETE - Identificação do leiaute inválida",
                  "timedOut": null,
                  "duration": 168,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'DELETE',\n  url: \"/Leiaute/asdsafsf-fdsfsd\",\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(404);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('A identificação do Leiaute é inválida');\n});",
                  "err": {},
                  "uuid": "f2a84951-0940-4d89-96a9-2b2d56f29b04",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G - DELETE - Remover o Modelo cadastrado para os testes de leiaute (1-A)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE G - DELETE - Remover o Modelo cadastrado para os testes de leiaute (1-A)",
                  "timedOut": null,
                  "duration": 270,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute',\n  qs: {\n    nome: 'Teste para leiaute'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/ModeloLeiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "42933d85-c688-4348-b597-e27bb1b0fc37",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "H - DELETE - Remover o leiaute cadastrado para os testes de leiaute (1-V)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE H - DELETE - Remover o leiaute cadastrado para os testes de leiaute (1-V)",
                  "timedOut": null,
                  "duration": 273,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '56789'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "0c8e87b0-68d9-48bd-a6f4-5c0b3fa8cadb",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "I - DELETE - Remover o leiaute cadastrado para os testes de leiaute (1-V)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE I - DELETE - Remover o leiaute cadastrado para os testes de leiaute (1-V)",
                  "timedOut": null,
                  "duration": 351,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Leiaute',\n  qs: {\n    codigo: '4859'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/Leiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "fcd2f351-fe82-457c-b30c-e19d223a9d30",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "J - DELETE - Remover o Modelo cadastrado para os testes de leiaute (1-V)",
                  "fullTitle": "Testes API - Cadastro de Leiaute 4 - Testes API Leiaute - DELETE J - DELETE - Remover o Modelo cadastrado para os testes de leiaute (1-V)",
                  "timedOut": null,
                  "duration": 260,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute',\n  qs: {\n    nome: 'Testando leiautes'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'DELETE',\n    url: \"/ModeloLeiaute/\".concat(resposta.body.retorno[0].id)\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "eafbda75-4968-41e3-9ffc-f6438209a737",
                  "parentUUID": "61774c90-6582-47f6-8004-8916576fbb38",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c9f3a04-9f36-4fcd-8c20-1f2f806be18f",
                "7799bcfd-e83f-4312-be64-ff6780c6bc42",
                "412fc850-6ae0-4521-a160-7276af8c71b9",
                "d4d200d6-ef82-41c8-9fc9-4649e1fc9ac2",
                "232b7e0d-d2cd-43c0-bd62-f0c4fed7dd49",
                "f2a84951-0940-4d89-96a9-2b2d56f29b04",
                "42933d85-c688-4348-b597-e27bb1b0fc37",
                "0c8e87b0-68d9-48bd-a6f4-5c0b3fa8cadb",
                "fcd2f351-fe82-457c-b30c-e19d223a9d30",
                "eafbda75-4968-41e3-9ffc-f6438209a737"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2779,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3360a4bb-cdd1-41ba-8341-8a64c51c3123",
              "title": "Arquivo morto",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Cadastrando um modelo e depois um leiaute baseado no modelo",
                  "fullTitle": "Testes API - Cadastro de Leiaute Arquivo morto Cadastrando um modelo e depois um leiaute baseado no modelo",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c38839f4-f458-4f43-9551-0371e7201237",
                  "parentUUID": "3360a4bb-cdd1-41ba-8341-8a64c51c3123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cadastrar um leiaute baseado em um modelo qualquer que exista.",
                  "fullTitle": "Testes API - Cadastro de Leiaute Arquivo morto Cadastrar um leiaute baseado em um modelo qualquer que exista.",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "6e2c8f36-003c-4853-92db-be176f818727",
                  "parentUUID": "3360a4bb-cdd1-41ba-8341-8a64c51c3123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "PUT - Alterando (idModeloLeiaute) de um Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute Arquivo morto PUT - Alterando (idModeloLeiaute) de um Leiaute",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "25644708-051d-4a9b-a047-763e7f74da45",
                  "parentUUID": "3360a4bb-cdd1-41ba-8341-8a64c51c3123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "POST - Cadastrando um Leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute Arquivo morto POST - Cadastrando um Leiaute",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "43c554c6-e42e-471b-a544-506342204973",
                  "parentUUID": "3360a4bb-cdd1-41ba-8341-8a64c51c3123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tentando verificar se existe leiaute cadastrado para modelo de nome teste para leiaute",
                  "fullTitle": "Testes API - Cadastro de Leiaute Arquivo morto Tentando verificar se existe leiaute cadastrado para modelo de nome teste para leiaute",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "bba046c8-591e-4aa0-bfc2-786fe3b147f5",
                  "parentUUID": "3360a4bb-cdd1-41ba-8341-8a64c51c3123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validando 2 condições",
                  "fullTitle": "Testes API - Cadastro de Leiaute Arquivo morto Validando 2 condições",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "23048965-6420-4f7d-b68a-560e00488256",
                  "parentUUID": "3360a4bb-cdd1-41ba-8341-8a64c51c3123",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "c38839f4-f458-4f43-9551-0371e7201237",
                "6e2c8f36-003c-4853-92db-be176f818727",
                "25644708-051d-4a9b-a047-763e7f74da45",
                "43c554c6-e42e-471b-a544-506342204973",
                "bba046c8-591e-4aa0-bfc2-786fe3b147f5",
                "23048965-6420-4f7d-b68a-560e00488256"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}