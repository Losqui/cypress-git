{
  "stats": {
    "suites": 6,
    "tests": 52,
    "passes": 51,
    "pending": 1,
    "failures": 0,
    "start": "2021-04-12T14:53:52.790Z",
    "end": "2021-04-12T14:54:30.943Z",
    "duration": 38153,
    "testsRegistered": 52,
    "passPercent": 100,
    "pendingPercent": 1.9230769230769231,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9a6a4db6-f1b8-4ee2-a53b-ddc472a8de1d",
      "title": "",
      "fullFile": "cypress\\integration\\versaoapi.spec.js",
      "file": "cypress\\integration\\versaoapi.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
          "title": "Testes API - Cadastro de Versão",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A - POST - Cadastrando uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão A - POST - Cadastrando uma Versão",
              "timedOut": null,
              "duration": 1566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Teste para versão',\n    descricao: 'Escrituração Contábil Digital alterado cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste para versão') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '99999',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-02-03T02:00:00',\n        fim: '2025-04-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '99999') codigoLeiaute = c.codigo;\n    });\n    expect(codigoLeiaute).to.be.equal('99999');\n  });\n});\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '99999') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '1741',\n      descricao: 'Versão 10.99',\n      publicacao: '2025-01-01T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n});",
              "err": {},
              "uuid": "e5032347-3b09-484b-9f74-961ad63e1907",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "B - POST - Cadastrando uma Versão com um idLeiaute que não existe (Não foi possível encontrar o Leiaute especificado)",
              "fullTitle": "Testes API - Cadastro de Versão B - POST - Cadastrando uma Versão com um idLeiaute que não existe (Não foi possível encontrar o Leiaute especificado)",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: '/Versao',\n  body: {\n    idLeiaute: 'c5050740-2871-423b-9354-24b413a8fdd5',\n    codigo: '10.98',\n    descricao: 'Versão 10.99',\n    publicacao: '2025-02-01T02:00:00',\n    status: 'Ativo'\n  },\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('Não foi possível encontrar o Leiaute especificado');\n});",
              "err": {},
              "uuid": "2a128006-c670-4098-b9f9-e8f77b740108",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "C - POST - Campo Codigo duplicado (Já existe um Versão com este código)",
              "fullTitle": "Testes API - Cadastro de Versão C - POST - Campo Codigo duplicado (Já existe um Versão com este código)",
              "timedOut": null,
              "duration": 963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Modelo versão ducplicado',\n    descricao: 'Teste dup cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Modelo versão ducplicado') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '7182',\n      descricao: 'Leiaute 7182 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2024-12-01T02:00:00',\n        fim: '2024-12-31T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '7182') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '1099',\n      descricao: 'Duplicidade código 10.99',\n      publicacao: '2025-02-01T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n});\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '7182') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '1099',\n      descricao: 'Duplicidade código 210.99',\n      publicacao: '2025-02-02T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('Já existe uma Versão com este código');\n  });\n});",
              "err": {},
              "uuid": "f06a1907-af72-4980-b1d3-e2d944d0e737",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "D - POST - Campo Publicação duplicado (Já existe um Versão com este código)",
              "fullTitle": "Testes API - Cadastro de Versão D - POST - Campo Publicação duplicado (Já existe um Versão com este código)",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "f1ea6cc0-c4c4-4358-8da0-f8338f95016e",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "E - POST - Campo idLeiaute vazio (Não foi possível encontrar o Leiaute especificado)",
              "fullTitle": "Testes API - Cadastro de Versão E - POST - Campo idLeiaute vazio (Não foi possível encontrar o Leiaute especificado)",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: '/Versao',\n  body: {\n    codigo: '11.99',\n    descricao: 'Versão 11.99',\n    publicacao: '2025-03-01T02:00:00',\n    status: 'Inativo'\n  },\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('Não foi possível encontrar o Leiaute especificado');\n});",
              "err": {},
              "uuid": "4247df8e-84a3-4678-9dbd-bd7775d15a1b",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "F - POST - Todos os campos obrigatórios vazios",
              "fullTitle": "Testes API - Cadastro de Versão F - POST - Todos os campos obrigatórios vazios",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta.body.errors);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Código é obrigatório');\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n    expect(resposta.body.errors.Publicacao[0]).to.be.equal('O campo de Publicacao é obrigatório');\n  });\n});",
              "err": {},
              "uuid": "ed52f863-b7f9-4c48-bad0-08d7d31ee266",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "G - POST - Campo Codigo vazio (O campo de Codigo é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão G - POST - Campo Codigo vazio (O campo de Codigo é obrigatório)",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      descricao: 'Versão 12.99',\n      publicacao: '2025-01-01T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Código é obrigatório');\n  });\n});",
              "err": {},
              "uuid": "1858d11a-24ad-43cf-aa29-c68e51c50b98",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "H - POST - Campo Descrição vazio (O campo de Descrição é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão H - POST - Campo Descrição vazio (O campo de Descrição é obrigatório)",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '13.99',\n      publicacao: '2025-04-01T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n  });\n});",
              "err": {},
              "uuid": "9d4f6f08-7504-48df-812e-b464d50845b5",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I - POST - Campo Publicacao vazio (O campo de Publicacao é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão I - POST - Campo Publicacao vazio (O campo de Publicacao é obrigatório)",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.status === 'Inativo') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '14.99',\n      descricao: 'Versão 14.99',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Publicacao[0]).to.be.equal('O campo de Publicacao é obrigatório');\n  });\n});",
              "err": {},
              "uuid": "7e522d4a-13cc-448f-bca9-a5876bd1d93f",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "J - POST - Cadastrar Versão sem informar o Campo Status (Por padrão deve vir preenchida com Inativo)",
              "fullTitle": "Testes API - Cadastro de Versão J - POST - Cadastrar Versão sem informar o Campo Status (Por padrão deve vir preenchida com Inativo)",
              "timedOut": null,
              "duration": 748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Testando Status',\n    descricao: 'Teste de status não preenchido cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Testando Status') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '4859',\n      descricao: 'Leiaute 4859 do status cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-05-03T02:00:00',\n        fim: '2025-06-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '4859') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '15.99',\n      descricao: 'Versão 15.99',\n      publicacao: '2025-05-01T02:00:00' //status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200); //Verificando se o cenário de teste foi executado corretamente.\n  cy.request({\n    method: 'GET',\n    url: '/Versao'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    var statusLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '15.99') codigoLeiaute = c.codigo;\n      if (c.status === 'Inativo') statusLeiaute = c.status;\n    });\n    expect(codigoLeiaute).to.be.equal('15.99');\n    expect(statusLeiaute).to.be.equal('Inativo');\n  });\n});",
              "err": {},
              "uuid": "be56861e-7e08-461f-a4d7-e43f3991ccec",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "K - PUT - Alterar (Descrição) de uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão K - PUT - Alterar (Descrição) de uma Versão",
              "timedOut": null,
              "duration": 1038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Alterando descr',\n    descricao: 'Teste descr cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Alterando descr') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '5926',\n      descricao: 'Leiaute 5926 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-06-04T02:00:00',\n        fim: '2025-07-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '5926') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '16.99',\n      descricao: 'Versão 16.99',\n      publicacao: '2025-06-01T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '16.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '16.99',\n      descricao: 'Versão 16.99 Alterado cy',\n      publicacao: '2025-06-01T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Versao'\n}).then(function (resposta) {\n  var descricaoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.descricao === 'Versão 16.99 Alterado cy') descricaoLeiaute = c.descricao;\n  });\n  expect(descricaoLeiaute).to.be.equal('Versão 16.99 Alterado cy');\n});",
              "err": {},
              "uuid": "3d0b85e3-e58f-4f13-bc1c-358de3387926",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "L - PUT - Alterar (Código) de uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão L - PUT - Alterar (Código) de uma Versão",
              "timedOut": null,
              "duration": 1077,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Cod Alterar',\n    descricao: 'Teste cod cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Cod Alterar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '2603',\n      descricao: 'Leiaute 2603 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-07-04T02:00:00',\n        fim: '2025-08-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '2603') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '17.99',\n      descricao: 'Versão 17.99',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '17.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '177.99',\n      descricao: 'Versão 17.99',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    }\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Versao'\n}).then(function (resposta) {\n  var coLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '177.99') coLeiaute = c.codigo;\n  });\n  expect(coLeiaute).to.be.equal('177.99');\n});",
              "err": {},
              "uuid": "c21284cf-15e8-46b5-813b-62e165ae692f",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "M - PUT - Alterar (publicacao) de uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão M - PUT - Alterar (publicacao) de uma Versão",
              "timedOut": null,
              "duration": 992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Public Alterar',\n    descricao: 'Teste publicacao cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Public Alterar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '6857',\n      descricao: 'Leiaute 6857 do public cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-08-05T02:00:00',\n        fim: '2025-09-04T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '6857') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '18.99',\n      descricao: 'Versão 18.99',\n      publicacao: '2025-06-21T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '18.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '18.99',\n      descricao: 'Versão 18.99',\n      publicacao: '2025-07-11T02:00:00',\n      status: 'Inativo'\n    }\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Versao'\n}).then(function (resposta) {\n  var pubLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.publicacao === '2025-07-11T02:00:00') pubLeiaute = c.publicacao;\n  });\n  expect(pubLeiaute).to.be.equal('2025-07-11T02:00:00');\n});",
              "err": {},
              "uuid": "9d57b928-8c64-4017-92c3-384a27568f0e",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "N - PUT - Alterar (Status) de uma Versão",
              "fullTitle": "Testes API - Cadastro de Versão N - PUT - Alterar (Status) de uma Versão",
              "timedOut": null,
              "duration": 1300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Status Alterar',\n    descricao: 'Teste Status cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Status Alterar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '256314',\n      descricao: 'Leiaute 256314 do public cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-06T02:00:00',\n        fim: '2025-10-04T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '256314') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '335566',\n      descricao: 'Versão 335566',\n      publicacao: '2025-06-21T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '335566'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '335566',\n      descricao: 'Versão 18.99',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').its('status').should('be.equal', 200);\ncy.get('@response').its('body.retorno').should('exist');\ncy.request({\n  method: 'GET',\n  url: '/Versao'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  var statusLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '335566') codigoLeiaute = c.codigo;\n    if (c.status === 'Inativo') statusLeiaute = c.status;\n  });\n  expect(codigoLeiaute).to.be.equal('335566');\n  expect(statusLeiaute).to.be.equal('Inativo');\n});",
              "err": {},
              "uuid": "aeba0304-deb6-4aae-8f41-78775172e6be",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O - PUT - Alterar campo Codigo para vazio (O campo de Codigo é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão O - PUT - Alterar campo Codigo para vazio (O campo de Codigo é obrigatório)",
              "timedOut": null,
              "duration": 1114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Cod vazio',\n    descricao: 'Teste cod vazio cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Cod vazio') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '3302',\n      descricao: 'Leiaute 3302 Cod vazio cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-08-05T02:00:00',\n        fim: '2025-09-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '3302') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '109.99',\n      descricao: 'Versão 109.99',\n      publicacao: '2025-07-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '109.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      //codigo: '177.99',\n      descricao: 'Versão 109.99',\n      publicacao: '2025-07-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo de Codigo é obrigatório');\n});",
              "err": {},
              "uuid": "116eaca1-8181-4ad4-b0c5-f33ca55eddf1",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "P - PUT - Alterar campo Descrição para vazio (O campo de Descrição é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão P - PUT - Alterar campo Descrição para vazio (O campo de Descrição é obrigatório)",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Descri vazio',\n    descricao: 'Teste Descri vazio cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Descri vazio') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '1526',\n      descricao: 'Leiaute 1526 Cod vazio cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-08-06T02:00:00',\n        fim: '2025-10-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '1526') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '88.98',\n      descricao: 'Versão 88.98',\n      publicacao: '2025-08-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '88.98'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '88.98',\n      //descricao: 'Versão 119.99',\n      publicacao: '2025-08-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo de Descrição é obrigatório');\n});",
              "err": {},
              "uuid": "6643c574-4463-414a-94f6-c30f2267ca52",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Q - PUT - Alterar campo Publicacao vazio (O campo de Publicacao é obrigatório)",
              "fullTitle": "Testes API - Cadastro de Versão Q - PUT - Alterar campo Publicacao vazio (O campo de Publicacao é obrigatório)",
              "timedOut": null,
              "duration": 910,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Publicacao vazio',\n    descricao: 'Teste Publicacao vazio cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Publicacao vazio') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '4815',\n      descricao: 'Leiaute 4815 publicacao vazio cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-07T02:00:00',\n        fim: '2025-10-23T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '4815') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '129.99',\n      descricao: 'Versão 129.99',\n      publicacao: '2025-08-21T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '129.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '129.99',\n      descricao: 'Versão 129.99',\n      //publicacao: '2025-08-21T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Publicacao[0]).to.be.equal('O campo de Publicacao é obrigatório');\n});",
              "err": {},
              "uuid": "b2a2c822-795f-4c80-b4b9-c437bd4836ed",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "R - PUT - Alterar campo Status vazio (Por padrão deve vir preenchida com Inativo)",
              "fullTitle": "Testes API - Cadastro de Versão R - PUT - Alterar campo Status vazio (Por padrão deve vir preenchida com Inativo)",
              "timedOut": null,
              "duration": 1101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Status vazio',\n    descricao: 'Teste status vazio cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Status vazio') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '4301',\n      descricao: 'Leiaute 4301 status vazio cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-10-08T02:00:00',\n        fim: '2025-11-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '4301') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '139.99',\n      descricao: 'Versão 139.99',\n      publicacao: '2025-09-21T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '139.99'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '139.99',\n      descricao: 'Versão 139.99',\n      publicacao: '2025-09-21T02:00:00'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200); //Verificando se o cenário de teste foi executado corretamente.\n  cy.request({\n    method: 'GET',\n    url: '/Versao'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    var statusLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '139.99') codigoLeiaute = c.codigo;\n      if (c.status === 'Inativo') statusLeiaute = c.status;\n    });\n    expect(codigoLeiaute).to.be.equal('139.99');\n    expect(statusLeiaute).to.be.equal('Inativo');\n  });\n});",
              "err": {},
              "uuid": "2a1d0e28-efdd-45fd-be1a-1245f8595893",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "S - PUT - Alterar campo Codigo duplicado (Já existe um Versão com este código)",
              "fullTitle": "Testes API - Cadastro de Versão S - PUT - Alterar campo Codigo duplicado (Já existe um Versão com este código)",
              "timedOut": null,
              "duration": 1153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Código duplicado Alterar',\n    descricao: 'Teste duplicação de cod cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Código duplicado Alterar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '741856',\n      descricao: 'Leiaute 741856 do public cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-06T02:00:00',\n        fim: '2025-10-04T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '741856') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '859674',\n      descricao: 'Versão 859674',\n      publicacao: '2025-06-21T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '741856') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '556644',\n      descricao: 'Versão 658147',\n      publicacao: '2025-07-21T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '556644'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '859674',\n      descricao: 'Versão codi',\n      publicacao: '2025-06-13T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n});\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(400);\n  expect(resposta.body.errors.Codigo[0]).to.be.equal('Já existe uma Versão com este código');\n});",
              "err": {},
              "uuid": "c0d2720e-5b4c-4fc3-af35-1672f3dc9329",
              "parentUUID": "e4898fbd-5d28-48d6-be2c-71d190dc6ee0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
              "title": "2 - Teste API Leiaute (Filtros)",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Populando base com Versão",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) A - POST - Populando base com Versão",
                  "timedOut": null,
                  "duration": 904,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Teste filtro',\n    descricao: 'Escrituração Contábil Digital cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste filtro') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '12345',\n      descricao: 'Leiaute 12345 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-02-03T02:00:00',\n        fim: '2025-04-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '12345') codigoLeiaute = c.codigo;\n    });\n    expect(codigoLeiaute).to.be.equal('12345');\n  });\n});\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '12345') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '12345.99',\n      descricao: 'Versão 10.99',\n      publicacao: '2025-01-01T02:00:00',\n      status: 'Ativo'\n    }\n  }).its('status').should('be.equal', 200);\n});",
                  "err": {},
                  "uuid": "bbc834cf-f402-4152-aa5c-035f4e0545b0",
                  "parentUUID": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - GET - (Listar todos) Filtrar Versão pelo Codigo",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) B - GET - (Listar todos) Filtrar Versão pelo Codigo",
                  "timedOut": null,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    Codigo: '12345.99'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === '12345.99') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].codigo).to.contain('12345.99');\n});",
                  "err": {},
                  "uuid": "db040537-f5e3-440f-a790-84ff9363daf9",
                  "parentUUID": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - GET - (Listar todos) Filtrar Versão pela Descrição",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) C - GET - (Listar todos) Filtrar Versão pela Descrição",
                  "timedOut": null,
                  "duration": 195,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    descricao: 'Versão 10.99'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === 'Versão 10.99') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].descricao).to.contain('Versão 10.99');\n});",
                  "err": {},
                  "uuid": "3dcbf374-acc0-4520-aa60-141339f8488d",
                  "parentUUID": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - GET - (Listar todos) Filtrar Versão pela Publicação",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) D - GET - (Listar todos) Filtrar Versão pela Publicação",
                  "timedOut": null,
                  "duration": 202,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    publicacao: '2025-01-01T02:00:00'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === '2025-01-01T02:00:00') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].publicacao).to.contain('2025-01-01T02:00:00');\n});",
                  "err": {},
                  "uuid": "aee1e9d1-8e95-4827-a979-da6b2c495e66",
                  "parentUUID": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "E - GET - (Listar todos) Filtrar Versão pelo Status",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) E - GET - (Listar todos) Filtrar Versão pelo Status",
                  "timedOut": null,
                  "duration": 238,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    status: 'Ativo'\n  }\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.cod === 'Ativo') codigoLeiaute = c.cod;\n  });\n  console.log(resposta);\n  expect(resposta.body.retorno[0].status).to.contain('Ativo');\n  expect(resposta.body.retorno.length).to.be.above(1); //Validando se existema mais de 1 registro nessa página \n});",
                  "err": {},
                  "uuid": "ed2d0bb0-d6c3-4a1c-88e9-20501b69d9ce",
                  "parentUUID": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F - GET - (Listar todos) Filtrar Versão por uma página especifica e que exista registros",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) F - GET - (Listar todos) Filtrar Versão por uma página especifica e que exista registros",
                  "timedOut": null,
                  "duration": 310,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    'Paginacao.Pagina': '1'\n  }\n}).then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.above(1); //Validando se existema mais de 1 registro nessa página \n});",
                  "err": {},
                  "uuid": "cd8d3040-89d3-4de5-a855-ad68586fb123",
                  "parentUUID": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G - GET - (Listar todos) Filtrar Versão por uma página que NÃO exista registros",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) G - GET - (Listar todos) Filtrar Versão por uma página que NÃO exista registros",
                  "timedOut": null,
                  "duration": 313,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    'Paginacao.Pagina': '1000'\n  }\n}).then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.equal(0); //Validando se na página 1000 o número de registros seja = 0\n});",
                  "err": {},
                  "uuid": "1fa90dab-173a-4eac-97a3-7020868b030c",
                  "parentUUID": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "H - GET - (Listar todos) Filtrar Versão pelo total de páginas",
                  "fullTitle": "Testes API - Cadastro de Versão 2 - Teste API Leiaute (Filtros) H - GET - (Listar todos) Filtrar Versão pelo total de páginas",
                  "timedOut": null,
                  "duration": 246,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    'Paginacao.TotalPorPagina': '2'\n  }\n}).then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.body.retorno.length).to.be.equal(2); //Validando o total de registros disponíveis por página. Nesse teste são 2 por página\n});",
                  "err": {},
                  "uuid": "0149ff38-4912-4526-adac-6f23b46752f0",
                  "parentUUID": "16e9c3a4-ad58-45b0-a0fe-5f06c3aadb1d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbc834cf-f402-4152-aa5c-035f4e0545b0",
                "db040537-f5e3-440f-a790-84ff9363daf9",
                "3dcbf374-acc0-4520-aa60-141339f8488d",
                "aee1e9d1-8e95-4827-a979-da6b2c495e66",
                "ed2d0bb0-d6c3-4a1c-88e9-20501b69d9ce",
                "cd8d3040-89d3-4de5-a855-ad68586fb123",
                "1fa90dab-173a-4eac-97a3-7020868b030c",
                "0149ff38-4912-4526-adac-6f23b46752f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2563,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7d8a62da-21d2-490e-a327-a13e6eccdc31",
              "title": "3 - Teste API Versão (Validando: Limite de caracteres)",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Limite de caracteres - codigo [50]",
                  "fullTitle": "Testes API - Cadastro de Versão 3 - Teste API Versão (Validando: Limite de caracteres) A - POST - Limite de caracteres - codigo [50]",
                  "timedOut": null,
                  "duration": 835,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Cadastrando um modelo pra utilizar nos testes de Leiaute\ncy.request({\n  method: 'POST',\n  url: '/ModeloLeiaute',\n  body: {\n    idEscopo: '012644f1-34c5-452e-a40d-5a3c2fa70d46',\n    nome: 'Teste limite',\n    descricao: 'Escrituração Contábil limite cy',\n    tipoArquivo: 'Separador',\n    configArquivo: '|'\n  }\n}).its('status').should('be.equal', 200); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Teste limite') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '6789',\n      descricao: 'Leiaute 6789 do modelo EFD Contribuições cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-02-03T02:00:00',\n        fim: '2025-04-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Leiaute'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '6789') codigoLeiaute = c.id;\n    }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n    cy.request({\n      method: 'POST',\n      url: '/Versao',\n      body: {\n        idLeiaute: codigoLeiaute,\n        codigo: '11987452445214587459632514785496325174789658214578965214785',\n        descricao: 'Versão 10.99',\n        publicacao: '2025-01-01T02:00:00',\n        status: 'Ativo'\n      },\n      failOnStatusCode: false\n    }).as('response');\n    cy.get('@response').then(function (resposta) {\n      console.log(resposta);\n      expect(resposta.status).to.be.equal(400);\n      expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo deve ter no máximo 50 caracteres');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "46cd8ae9-7624-47e8-8ab1-96603954077f",
                  "parentUUID": "7d8a62da-21d2-490e-a327-a13e6eccdc31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - PUT - Limite de caracteres - codigo [50]",
                  "fullTitle": "Testes API - Cadastro de Versão 3 - Teste API Versão (Validando: Limite de caracteres) B - PUT - Limite de caracteres - codigo [50]",
                  "timedOut": null,
                  "duration": 923,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.cadastrarModelo('Nome PUT max'); //Cadastrando um modelo pra utilizar nos testes de Leiaute\n//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Nome PUT max') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '9905',\n      descricao: 'Leiaute 9905 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-07-04T02:00:00',\n        fim: '2025-08-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '9905') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '911',\n      descricao: 'Versão 119',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '911'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '11987452445214587459632514785496325174789658214578965214785',\n      descricao: 'Versão 119',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Codigo[0]).to.be.equal('O campo deve ter no máximo 50 caracteres');\n  });\n});",
                  "err": {},
                  "uuid": "b5b201c9-4de9-4b78-80fc-65fb396aa56b",
                  "parentUUID": "7d8a62da-21d2-490e-a327-a13e6eccdc31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - POST - Limite de caracteres - Descrição [150]",
                  "fullTitle": "Testes API - Cadastro de Versão 3 - Teste API Versão (Validando: Limite de caracteres) C - POST - Limite de caracteres - Descrição [150]",
                  "timedOut": null,
                  "duration": 399,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//Buscando no cadastro o leiaute registrado no teste acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var codigoLeiaute = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '6789') codigoLeiaute = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: codigoLeiaute,\n      codigo: '98765',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições alterado pelo cy. Este manual visa a orientar a execução dos serviços destinados à emissão de documentos e escrituração de livros fiscais',\n      publicacao: '2025-01-01T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo deve ter no máximo 150 caracteres');\n  });\n});",
                  "err": {},
                  "uuid": "4c1d2b6b-2b31-4270-b7cb-c02b1c6d6d12",
                  "parentUUID": "7d8a62da-21d2-490e-a327-a13e6eccdc31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - PUT - Limite de caracteres - Descrição [150]",
                  "fullTitle": "Testes API - Cadastro de Versão 3 - Teste API Versão (Validando: Limite de caracteres) D - PUT - Limite de caracteres - Descrição [150]",
                  "timedOut": null,
                  "duration": 906,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.cadastrarModelo('Descrição PUT max'); //Cadastrando um modelo pra utilizar nos testes de Leiaute\n//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Descrição PUT max') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '6889',\n      descricao: 'Leiaute 6889 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-07-04T02:00:00',\n        fim: '2025-08-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '6889') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '1999',\n      descricao: 'Versão 1999',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '1999'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id),\n    body: {\n      idLeiaute: \"\".concat(resposta.body.retorno[0].idLeiaute),\n      codigo: '1999',\n      descricao: 'Leiaute 005 do modelo EFD Contribuições alterado pelo cy. Este manual visa a orientar a execução dos serviços destinados à emissão de documentos e escrituração de livros fiscais',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(400);\n    expect(resposta.body.errors.Descricao[0]).to.be.equal('O campo deve ter no máximo 150 caracteres');\n  });\n});",
                  "err": {},
                  "uuid": "dfb39d6d-7559-40df-ab4d-4a61f89c0c1b",
                  "parentUUID": "7d8a62da-21d2-490e-a327-a13e6eccdc31",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46cd8ae9-7624-47e8-8ab1-96603954077f",
                "b5b201c9-4de9-4b78-80fc-65fb396aa56b",
                "4c1d2b6b-2b31-4270-b7cb-c02b1c6d6d12",
                "dfb39d6d-7559-40df-ab4d-4a61f89c0c1b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3063,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fbbf28cb-8cc6-42b9-87e1-19739ca18675",
              "title": "4 - Testes API Leiaute - Clonar",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Clonar Versão",
                  "fullTitle": "Testes API - Cadastro de Versão 4 - Testes API Leiaute - Clonar A - POST - Clonar Versão",
                  "timedOut": null,
                  "duration": 1086,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.cadastrarModelo('Modelo Clonar'); //Cadastrando um modelo pra utilizar nos testes de Leiaute\n//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Modelo Clonar') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '48891',\n      descricao: 'Leiaute 48891 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-04T02:00:00',\n        fim: '2025-10-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '48891') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '2356',\n      descricao: 'Versão 2356',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '2356'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'POST',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id, \"/clone\"),\n    // body:\n    // {\n    //     idLeiaute: `${resposta.body.retorno[0].idLeiaute}`,\n    //     codigo: '11987452445214587459632514785496325174789658214578965214785',\n    //     descricao: 'Versão 119',\n    //     publicacao: '2025-06-11T02:00:00',\n    //     status: 'Inativo'\n    // },\n    failOnStatusCode: false\n  }).as('response');\n  cy.get('@response').then(function (resposta) {\n    console.log(resposta);\n    expect(resposta.status).to.be.equal(200);\n    cy.request({\n      method: 'GET',\n      url: '/Versao'\n    }).then(function (resposta) {\n      var codigoLeiaute = null;\n      var statusLeiaute = null;\n      var descLeiaute = null;\n      var publicaLeiaute = null;\n      resposta.body.retorno.forEach(function (c) {\n        if (c.codigo === '2357') codigoLeiaute = c.codigo;\n        if (c.status === 'Inativo') statusLeiaute = c.status;\n        if (c.descricao === 'Versão 2356') descLeiaute = c.descricao;\n        if (c.publicacao === '2025-06-11T02:00:00') publicaLeiaute = c.publicacao;\n      });\n      expect(codigoLeiaute).to.be.equal('2357');\n      expect(statusLeiaute).to.be.equal('Inativo');\n      expect(descLeiaute).to.be.equal('Versão 2356');\n      expect(publicaLeiaute).to.be.equal('2025-06-11T02:00:00');\n    });\n  });\n});",
                  "err": {},
                  "uuid": "3e9844e7-a95f-4050-934b-ec965bde0459",
                  "parentUUID": "fbbf28cb-8cc6-42b9-87e1-19739ca18675",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e9844e7-a95f-4050-934b-ec965bde0459"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1086,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cac45316-a92f-4077-b11d-1079155610df",
              "title": "5 - Testes API Leiaute - Modifica Status",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - POST - Modifica o status da Versão para Ativo",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - Modifica Status A - POST - Modifica o status da Versão para Ativo",
                  "timedOut": null,
                  "duration": 875,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.cadastrarModelo('Modelo Modifica Status'); //Cadastrando um modelo pra utilizar nos testes de Leiaute\n//Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/ModeloLeiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.nome === 'Modelo Modifica Status') nomeModelo = c.id;\n  }); //Cadastrando o Leiaute utilizando o ID do modelo cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Leiaute',\n    body: {\n      idModeloLeiaute: nomeModelo,\n      codigo: '456525',\n      descricao: 'Leiaute 456525 do descr cy',\n      status: 'Ativo',\n      vigencia: {\n        inicio: '2025-09-04T02:00:00',\n        fim: '2025-10-03T02:00:00'\n      }\n    }\n  }).its('status').should('be.equal', 200);\n}); //Buscando no cadastro o modelo registrado acima\ncy.request({\n  method: 'GET',\n  url: '/Leiaute'\n}).then(function (resposta) {\n  var nomeModelo = null;\n  resposta.body.retorno.forEach(function (c) {\n    if (c.codigo === '456525') nomeModelo = c.id;\n  }); //Cadastrando o versão utilizando o ID do leiaute cadastrado acima\n  cy.request({\n    method: 'POST',\n    url: '/Versao',\n    body: {\n      idLeiaute: nomeModelo,\n      codigo: '857595',\n      descricao: 'Versão 857595',\n      publicacao: '2025-06-11T02:00:00',\n      status: 'Inativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n}); //Buscar a versão cadastrada anteriormente para alterar o campo descrição\ncy.request({\n  method: 'GET',\n  url: '/Versao',\n  qs: {\n    codigo: '857595'\n  }\n}).then(function (resposta) {\n  cy.request({\n    method: 'PUT',\n    url: \"/Versao/\".concat(resposta.body.retorno[0].id, \"/modificaStatus\"),\n    body: {\n      status: 'Ativo'\n    },\n    failOnStatusCode: false\n  }).its('status').should('be.equal', 200);\n  cy.request({\n    method: 'GET',\n    url: '/Versao'\n  }).then(function (resposta) {\n    var codigoLeiaute = null;\n    var statusLeiaute = null;\n    resposta.body.retorno.forEach(function (c) {\n      if (c.codigo === '857595') codigoLeiaute = c.codigo;\n      if (c.status === 'Ativo') statusLeiaute = c.status;\n    });\n    expect(codigoLeiaute).to.be.equal('857595');\n    expect(statusLeiaute).to.be.equal('Ativo');\n  });\n});",
                  "err": {},
                  "uuid": "b4f951b6-8fac-4ac7-b49c-1a0155407d96",
                  "parentUUID": "cac45316-a92f-4077-b11d-1079155610df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b4f951b6-8fac-4ac7-b49c-1a0155407d96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 875,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
              "title": "5 - Testes API Leiaute - DELETE",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "A - DELETE - Cadastro de Versão (1-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE A - DELETE - Cadastro de Versão (1-A)",
                  "timedOut": null,
                  "duration": 941,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(1741);\ncy.excluirLeiaute(99999);\ncy.excluirModelo('Teste para versão');",
                  "err": {},
                  "uuid": "1294778c-e284-4073-943c-edf1ef8c19c3",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "B - DELETE - Cadastro de Versão (1-C)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE B - DELETE - Cadastro de Versão (1-C)",
                  "timedOut": null,
                  "duration": 649,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(1099);\ncy.excluirLeiaute(7182);\ncy.excluirModelo('Modelo versão ducplicado');",
                  "err": {},
                  "uuid": "73fd7bc2-28b8-413a-8b21-a6f3abd0f1d7",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "C - DELETE - Cadastro de Versão (1-J)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE C - DELETE - Cadastro de Versão (1-J)",
                  "timedOut": null,
                  "duration": 666,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(15.99);\ncy.excluirLeiaute(4859);\ncy.excluirModelo('Testando Status');",
                  "err": {},
                  "uuid": "a1af45ff-c155-4eed-aa1b-51921f52e0e0",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "D - DELETE - Cadastro de Versão (1-K)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE D - DELETE - Cadastro de Versão (1-K)",
                  "timedOut": null,
                  "duration": 868,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(16.99);\ncy.excluirLeiaute(5926);\ncy.excluirModelo('Alterando descr');",
                  "err": {},
                  "uuid": "45ab806d-4195-44a4-8769-f9257b0e1be7",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "E - DELETE - Cadastro de Versão (1-L)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE E - DELETE - Cadastro de Versão (1-L)",
                  "timedOut": null,
                  "duration": 645,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(177.99);\ncy.excluirLeiaute(2603);\ncy.excluirModelo('Cod Alterar');",
                  "err": {},
                  "uuid": "3df0c88c-8df1-48ba-9569-4e90eee7aa4b",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F - DELETE - Cadastro de Versão (1-M)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE F - DELETE - Cadastro de Versão (1-M)",
                  "timedOut": null,
                  "duration": 928,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(18.99);\ncy.excluirLeiaute(6857);\ncy.excluirModelo('Public Alterar');",
                  "err": {},
                  "uuid": "7902f120-3273-472a-b8fd-aad69d73a35a",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G - DELETE - Cadastro de Versão (1-N)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE G - DELETE - Cadastro de Versão (1-N)",
                  "timedOut": null,
                  "duration": 801,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(335566);\ncy.excluirLeiaute(256314);\ncy.excluirModelo('Status Alterar');",
                  "err": {},
                  "uuid": "b0aee3ee-1c9d-47b3-8f71-013b732b7051",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "H - DELETE - Cadastro de Versão (1-O)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE H - DELETE - Cadastro de Versão (1-O)",
                  "timedOut": null,
                  "duration": 651,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(109.99);\ncy.excluirLeiaute(3302);\ncy.excluirModelo('Cod vazio');",
                  "err": {},
                  "uuid": "4b7100b0-425b-48ba-b859-63082f39ef4a",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "I - DELETE - Cadastro de Versão (1-P)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE I - DELETE - Cadastro de Versão (1-P)",
                  "timedOut": null,
                  "duration": 843,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(88.98);\ncy.excluirLeiaute(1526);\ncy.excluirModelo('Descri vazio');",
                  "err": {},
                  "uuid": "2ad18aa8-2cf9-4580-998a-be9adf0a5d9f",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "J - DELETE - Cadastro de Versão (1-Q)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE J - DELETE - Cadastro de Versão (1-Q)",
                  "timedOut": null,
                  "duration": 722,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(129.99);\ncy.excluirLeiaute(4815);\ncy.excluirModelo('Publicacao vazio');",
                  "err": {},
                  "uuid": "b2b05bbc-d12f-4317-99b0-c08dd102d25a",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "K - DELETE - Cadastro de Versão (1-R)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE K - DELETE - Cadastro de Versão (1-R)",
                  "timedOut": null,
                  "duration": 846,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(139.99);\ncy.excluirLeiaute(4301);\ncy.excluirModelo('Status vazio');",
                  "err": {},
                  "uuid": "2a2890ce-52e3-4ed1-958b-136d7273b05a",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "L - DELETE - Cadastro de Versão (2-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE L - DELETE - Cadastro de Versão (2-A)",
                  "timedOut": null,
                  "duration": 671,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(12345.99);\ncy.excluirLeiaute(12345);\ncy.excluirModelo('Teste filtro');",
                  "err": {},
                  "uuid": "3bf9cae1-4669-4f20-b668-abbaa6422348",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "M - DELETE - Cadastro de Versão (3-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE M - DELETE - Cadastro de Versão (3-A)",
                  "timedOut": null,
                  "duration": 555,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirLeiaute(6789);\ncy.excluirModelo('Teste limite');",
                  "err": {},
                  "uuid": "7df9ff5b-83b0-4bec-a9e0-0f8179254f52",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "N - DELETE - Cadastro de Versão (3-B)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE N - DELETE - Cadastro de Versão (3-B)",
                  "timedOut": null,
                  "duration": 981,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(911);\ncy.excluirLeiaute(9905);\ncy.excluirModelo('Nome PUT max');",
                  "err": {},
                  "uuid": "34d4293e-8c59-4678-a500-c7f289843e9c",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "O - DELETE - Cadastro de Versão (3-D)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE O - DELETE - Cadastro de Versão (3-D)",
                  "timedOut": null,
                  "duration": 620,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(1999);\ncy.excluirLeiaute(6889);\ncy.excluirModelo('Descrição PUT max');",
                  "err": {},
                  "uuid": "02f95aa7-adde-442c-a516-c3010c138536",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "P - DELETE - Cadastro de Versão (1-S)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE P - DELETE - Cadastro de Versão (1-S)",
                  "timedOut": null,
                  "duration": 1055,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(556644);\ncy.excluirVersao(859674);\ncy.excluirLeiaute(741856);\ncy.excluirModelo('Código duplicado Alterar');",
                  "err": {},
                  "uuid": "970d1de1-2b2e-4e78-8b5a-3f9542ed7518",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Q - DELETE - Cadastro de Versão (4-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE Q - DELETE - Cadastro de Versão (4-A)",
                  "timedOut": null,
                  "duration": 1009,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(2357);\ncy.excluirVersao(2356);\ncy.excluirLeiaute(48891);\ncy.excluirModelo('Modelo Clonar');",
                  "err": {},
                  "uuid": "ad880156-3a39-4e1d-bd50-2942af9ae089",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "R - DELETE - Cadastro de Versão (5-A)",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE R - DELETE - Cadastro de Versão (5-A)",
                  "timedOut": null,
                  "duration": 760,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.excluirVersao(857595);\ncy.excluirLeiaute(456525);\ncy.excluirModelo('Modelo Modifica Status');",
                  "err": {},
                  "uuid": "8838b5cd-24cf-43a2-83ab-b42f8524e8be",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "S - DELETE - Identificação da Versão inválida",
                  "fullTitle": "Testes API - Cadastro de Versão 5 - Testes API Leiaute - DELETE S - DELETE - Identificação da Versão inválida",
                  "timedOut": null,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'DELETE',\n  url: \"/Versao/asdsafsf-fdsfsd\",\n  failOnStatusCode: false\n}).as('response');\ncy.get('@response').then(function (resposta) {\n  console.log(resposta);\n  expect(resposta.status).to.be.equal(404);\n  expect(resposta.body.errors[\"\"][0]).to.be.equal('A identificação do Versão é inválida');\n});",
                  "err": {},
                  "uuid": "b360b9ef-8986-4549-b9df-23e41559b30e",
                  "parentUUID": "0af5780b-b1a8-492d-84d5-cfdd4d2a8c37",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1294778c-e284-4073-943c-edf1ef8c19c3",
                "73fd7bc2-28b8-413a-8b21-a6f3abd0f1d7",
                "a1af45ff-c155-4eed-aa1b-51921f52e0e0",
                "45ab806d-4195-44a4-8769-f9257b0e1be7",
                "3df0c88c-8df1-48ba-9569-4e90eee7aa4b",
                "7902f120-3273-472a-b8fd-aad69d73a35a",
                "b0aee3ee-1c9d-47b3-8f71-013b732b7051",
                "4b7100b0-425b-48ba-b859-63082f39ef4a",
                "2ad18aa8-2cf9-4580-998a-be9adf0a5d9f",
                "b2b05bbc-d12f-4317-99b0-c08dd102d25a",
                "2a2890ce-52e3-4ed1-958b-136d7273b05a",
                "3bf9cae1-4669-4f20-b668-abbaa6422348",
                "7df9ff5b-83b0-4bec-a9e0-0f8179254f52",
                "34d4293e-8c59-4678-a500-c7f289843e9c",
                "02f95aa7-adde-442c-a516-c3010c138536",
                "970d1de1-2b2e-4e78-8b5a-3f9542ed7518",
                "ad880156-3a39-4e1d-bd50-2942af9ae089",
                "8838b5cd-24cf-43a2-83ab-b42f8524e8be",
                "b360b9ef-8986-4549-b9df-23e41559b30e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14415,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "e5032347-3b09-484b-9f74-961ad63e1907",
            "2a128006-c670-4098-b9f9-e8f77b740108",
            "f06a1907-af72-4980-b1d3-e2d944d0e737",
            "4247df8e-84a3-4678-9dbd-bd7775d15a1b",
            "ed52f863-b7f9-4c48-bad0-08d7d31ee266",
            "1858d11a-24ad-43cf-aa29-c68e51c50b98",
            "9d4f6f08-7504-48df-812e-b464d50845b5",
            "7e522d4a-13cc-448f-bca9-a5876bd1d93f",
            "be56861e-7e08-461f-a4d7-e43f3991ccec",
            "3d0b85e3-e58f-4f13-bc1c-358de3387926",
            "c21284cf-15e8-46b5-813b-62e165ae692f",
            "9d57b928-8c64-4017-92c3-384a27568f0e",
            "aeba0304-deb6-4aae-8f41-78775172e6be",
            "116eaca1-8181-4ad4-b0c5-f33ca55eddf1",
            "6643c574-4463-414a-94f6-c30f2267ca52",
            "b2a2c822-795f-4c80-b4b9-c437bd4836ed",
            "2a1d0e28-efdd-45fd-be1a-1245f8595893",
            "c0d2720e-5b4c-4fc3-af35-1672f3dc9329"
          ],
          "failures": [],
          "pending": [
            "f1ea6cc0-c4c4-4358-8da0-f8338f95016e"
          ],
          "skipped": [],
          "duration": 14518,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}